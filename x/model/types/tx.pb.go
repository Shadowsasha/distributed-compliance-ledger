// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: model/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateModel struct {
	Creator                                    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty" validate:"required"`
	Vid                                        int32  `protobuf:"varint,2,opt,name=vid,proto3" json:"vid,omitempty" validate:"gte=1,lte=65535"`
	Pid                                        int32  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty" validate:"gte=1,lte=65535"`
	DeviceTypeId                               int32  `protobuf:"varint,4,opt,name=deviceTypeId,proto3" json:"deviceTypeId,omitempty" validate:"gte=0,lte=65535"`
	ProductName                                string `protobuf:"bytes,5,opt,name=productName,proto3" json:"productName,omitempty" validate:"required,max=128"`
	ProductLabel                               string `protobuf:"bytes,6,opt,name=productLabel,proto3" json:"productLabel,omitempty" validate:"max=256"`
	PartNumber                                 string `protobuf:"bytes,7,opt,name=partNumber,proto3" json:"partNumber,omitempty" validate:"max=32"`
	CommissioningCustomFlow                    int32  `protobuf:"varint,8,opt,name=commissioningCustomFlow,proto3" json:"commissioningCustomFlow,omitempty" validate:"gte=0,lte=2"`
	CommissioningCustomFlowUrl                 string `protobuf:"bytes,9,opt,name=commissioningCustomFlowUrl,proto3" json:"commissioningCustomFlowUrl,omitempty" validate:"required_if=CommissioningCustomFlow 2,omitempty,url,startsnotwith=http:,max=256"`
	CommissioningModeInitialStepsHint          uint32 `protobuf:"varint,10,opt,name=commissioningModeInitialStepsHint,proto3" json:"commissioningModeInitialStepsHint,omitempty"`
	CommissioningModeInitialStepsInstruction   string `protobuf:"bytes,11,opt,name=commissioningModeInitialStepsInstruction,proto3" json:"commissioningModeInitialStepsInstruction,omitempty" validate:"max=1024"`
	CommissioningModeSecondaryStepsHint        uint32 `protobuf:"varint,12,opt,name=commissioningModeSecondaryStepsHint,proto3" json:"commissioningModeSecondaryStepsHint,omitempty"`
	CommissioningModeSecondaryStepsInstruction string `protobuf:"bytes,13,opt,name=commissioningModeSecondaryStepsInstruction,proto3" json:"commissioningModeSecondaryStepsInstruction,omitempty" validate:"max=1024"`
	UserManualUrl                              string `protobuf:"bytes,14,opt,name=userManualUrl,proto3" json:"userManualUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	SupportUrl                                 string `protobuf:"bytes,15,opt,name=supportUrl,proto3" json:"supportUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	ProductUrl                                 string `protobuf:"bytes,16,opt,name=productUrl,proto3" json:"productUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	LsfUrl                                     string `protobuf:"bytes,17,opt,name=lsfUrl,proto3" json:"lsfUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	SchemaVersion                              uint32 `protobuf:"varint,18,opt,name=schemaVersion,proto3" json:"schemaVersion,omitempty" validate:"gte=0,lte=65535"`
	CommissionerRemoteUiFlowUrl                string `protobuf:"bytes,19,opt,name=commissionerRemoteUiFlowUrl,proto3" json:"commissionerRemoteUiFlowUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
}

func (m *MsgCreateModel) Reset()         { *m = MsgCreateModel{} }
func (m *MsgCreateModel) String() string { return proto.CompactTextString(m) }
func (*MsgCreateModel) ProtoMessage()    {}
func (*MsgCreateModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_8898c625fa4755dc, []int{0}
}
func (m *MsgCreateModel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateModel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateModel.Merge(m, src)
}
func (m *MsgCreateModel) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateModel) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateModel.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateModel proto.InternalMessageInfo

func (m *MsgCreateModel) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateModel) GetVid() int32 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *MsgCreateModel) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *MsgCreateModel) GetDeviceTypeId() int32 {
	if m != nil {
		return m.DeviceTypeId
	}
	return 0
}

func (m *MsgCreateModel) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *MsgCreateModel) GetProductLabel() string {
	if m != nil {
		return m.ProductLabel
	}
	return ""
}

func (m *MsgCreateModel) GetPartNumber() string {
	if m != nil {
		return m.PartNumber
	}
	return ""
}

func (m *MsgCreateModel) GetCommissioningCustomFlow() int32 {
	if m != nil {
		return m.CommissioningCustomFlow
	}
	return 0
}

func (m *MsgCreateModel) GetCommissioningCustomFlowUrl() string {
	if m != nil {
		return m.CommissioningCustomFlowUrl
	}
	return ""
}

func (m *MsgCreateModel) GetCommissioningModeInitialStepsHint() uint32 {
	if m != nil {
		return m.CommissioningModeInitialStepsHint
	}
	return 0
}

func (m *MsgCreateModel) GetCommissioningModeInitialStepsInstruction() string {
	if m != nil {
		return m.CommissioningModeInitialStepsInstruction
	}
	return ""
}

func (m *MsgCreateModel) GetCommissioningModeSecondaryStepsHint() uint32 {
	if m != nil {
		return m.CommissioningModeSecondaryStepsHint
	}
	return 0
}

func (m *MsgCreateModel) GetCommissioningModeSecondaryStepsInstruction() string {
	if m != nil {
		return m.CommissioningModeSecondaryStepsInstruction
	}
	return ""
}

func (m *MsgCreateModel) GetUserManualUrl() string {
	if m != nil {
		return m.UserManualUrl
	}
	return ""
}

func (m *MsgCreateModel) GetSupportUrl() string {
	if m != nil {
		return m.SupportUrl
	}
	return ""
}

func (m *MsgCreateModel) GetProductUrl() string {
	if m != nil {
		return m.ProductUrl
	}
	return ""
}

func (m *MsgCreateModel) GetLsfUrl() string {
	if m != nil {
		return m.LsfUrl
	}
	return ""
}

func (m *MsgCreateModel) GetSchemaVersion() uint32 {
	if m != nil {
		return m.SchemaVersion
	}
	return 0
}

func (m *MsgCreateModel) GetCommissionerRemoteUiFlowUrl() string {
	if m != nil {
		return m.CommissionerRemoteUiFlowUrl
	}
	return ""
}

type MsgCreateModelResponse struct {
}

func (m *MsgCreateModelResponse) Reset()         { *m = MsgCreateModelResponse{} }
func (m *MsgCreateModelResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateModelResponse) ProtoMessage()    {}
func (*MsgCreateModelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8898c625fa4755dc, []int{1}
}
func (m *MsgCreateModelResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateModelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateModelResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateModelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateModelResponse.Merge(m, src)
}
func (m *MsgCreateModelResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateModelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateModelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateModelResponse proto.InternalMessageInfo

type MsgUpdateModel struct {
	Creator                                    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty" validate:"required"`
	Vid                                        int32  `protobuf:"varint,2,opt,name=vid,proto3" json:"vid,omitempty" validate:"gte=1,lte=65535"`
	Pid                                        int32  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty" validate:"gte=1,lte=65535"`
	ProductName                                string `protobuf:"bytes,4,opt,name=productName,proto3" json:"productName,omitempty" validate:"max=128"`
	ProductLabel                               string `protobuf:"bytes,5,opt,name=productLabel,proto3" json:"productLabel,omitempty" validate:"max=256"`
	PartNumber                                 string `protobuf:"bytes,6,opt,name=partNumber,proto3" json:"partNumber,omitempty" validate:"max=32"`
	CommissioningCustomFlowUrl                 string `protobuf:"bytes,7,opt,name=commissioningCustomFlowUrl,proto3" json:"commissioningCustomFlowUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	CommissioningModeInitialStepsInstruction   string `protobuf:"bytes,8,opt,name=commissioningModeInitialStepsInstruction,proto3" json:"commissioningModeInitialStepsInstruction,omitempty" validate:"max=1024"`
	CommissioningModeSecondaryStepsInstruction string `protobuf:"bytes,9,opt,name=commissioningModeSecondaryStepsInstruction,proto3" json:"commissioningModeSecondaryStepsInstruction,omitempty" validate:"max=1024"`
	UserManualUrl                              string `protobuf:"bytes,10,opt,name=userManualUrl,proto3" json:"userManualUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	SupportUrl                                 string `protobuf:"bytes,11,opt,name=supportUrl,proto3" json:"supportUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	ProductUrl                                 string `protobuf:"bytes,12,opt,name=productUrl,proto3" json:"productUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	LsfUrl                                     string `protobuf:"bytes,13,opt,name=lsfUrl,proto3" json:"lsfUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	LsfRevision                                int32  `protobuf:"varint,14,opt,name=lsfRevision,proto3" json:"lsfRevision,omitempty" validate:"gte=0,lte=65535"`
	SchemaVersion                              uint32 `protobuf:"varint,15,opt,name=schemaVersion,proto3" json:"schemaVersion,omitempty" validate:"gte=0,lte=65535"`
	CommissionerRemoteUiFlowUrl                string `protobuf:"bytes,16,opt,name=commissionerRemoteUiFlowUrl,proto3" json:"commissionerRemoteUiFlowUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
}

func (m *MsgUpdateModel) Reset()         { *m = MsgUpdateModel{} }
func (m *MsgUpdateModel) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateModel) ProtoMessage()    {}
func (*MsgUpdateModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_8898c625fa4755dc, []int{2}
}
func (m *MsgUpdateModel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateModel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateModel.Merge(m, src)
}
func (m *MsgUpdateModel) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateModel) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateModel.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateModel proto.InternalMessageInfo

func (m *MsgUpdateModel) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateModel) GetVid() int32 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *MsgUpdateModel) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *MsgUpdateModel) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *MsgUpdateModel) GetProductLabel() string {
	if m != nil {
		return m.ProductLabel
	}
	return ""
}

func (m *MsgUpdateModel) GetPartNumber() string {
	if m != nil {
		return m.PartNumber
	}
	return ""
}

func (m *MsgUpdateModel) GetCommissioningCustomFlowUrl() string {
	if m != nil {
		return m.CommissioningCustomFlowUrl
	}
	return ""
}

func (m *MsgUpdateModel) GetCommissioningModeInitialStepsInstruction() string {
	if m != nil {
		return m.CommissioningModeInitialStepsInstruction
	}
	return ""
}

func (m *MsgUpdateModel) GetCommissioningModeSecondaryStepsInstruction() string {
	if m != nil {
		return m.CommissioningModeSecondaryStepsInstruction
	}
	return ""
}

func (m *MsgUpdateModel) GetUserManualUrl() string {
	if m != nil {
		return m.UserManualUrl
	}
	return ""
}

func (m *MsgUpdateModel) GetSupportUrl() string {
	if m != nil {
		return m.SupportUrl
	}
	return ""
}

func (m *MsgUpdateModel) GetProductUrl() string {
	if m != nil {
		return m.ProductUrl
	}
	return ""
}

func (m *MsgUpdateModel) GetLsfUrl() string {
	if m != nil {
		return m.LsfUrl
	}
	return ""
}

func (m *MsgUpdateModel) GetLsfRevision() int32 {
	if m != nil {
		return m.LsfRevision
	}
	return 0
}

func (m *MsgUpdateModel) GetSchemaVersion() uint32 {
	if m != nil {
		return m.SchemaVersion
	}
	return 0
}

func (m *MsgUpdateModel) GetCommissionerRemoteUiFlowUrl() string {
	if m != nil {
		return m.CommissionerRemoteUiFlowUrl
	}
	return ""
}

type MsgUpdateModelResponse struct {
}

func (m *MsgUpdateModelResponse) Reset()         { *m = MsgUpdateModelResponse{} }
func (m *MsgUpdateModelResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateModelResponse) ProtoMessage()    {}
func (*MsgUpdateModelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8898c625fa4755dc, []int{3}
}
func (m *MsgUpdateModelResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateModelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateModelResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateModelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateModelResponse.Merge(m, src)
}
func (m *MsgUpdateModelResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateModelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateModelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateModelResponse proto.InternalMessageInfo

type MsgDeleteModel struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty" validate:"required"`
	Vid     int32  `protobuf:"varint,2,opt,name=vid,proto3" json:"vid,omitempty" validate:"gte=1,lte=65535"`
	Pid     int32  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty" validate:"gte=1,lte=65535"`
}

func (m *MsgDeleteModel) Reset()         { *m = MsgDeleteModel{} }
func (m *MsgDeleteModel) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteModel) ProtoMessage()    {}
func (*MsgDeleteModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_8898c625fa4755dc, []int{4}
}
func (m *MsgDeleteModel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteModel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteModel.Merge(m, src)
}
func (m *MsgDeleteModel) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteModel) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteModel.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteModel proto.InternalMessageInfo

func (m *MsgDeleteModel) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteModel) GetVid() int32 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *MsgDeleteModel) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type MsgDeleteModelResponse struct {
}

func (m *MsgDeleteModelResponse) Reset()         { *m = MsgDeleteModelResponse{} }
func (m *MsgDeleteModelResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteModelResponse) ProtoMessage()    {}
func (*MsgDeleteModelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8898c625fa4755dc, []int{5}
}
func (m *MsgDeleteModelResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteModelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteModelResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteModelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteModelResponse.Merge(m, src)
}
func (m *MsgDeleteModelResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteModelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteModelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteModelResponse proto.InternalMessageInfo

type MsgCreateModelVersion struct {
	Creator                      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty" validate:"required"`
	Vid                          int32  `protobuf:"varint,2,opt,name=vid,proto3" json:"vid,omitempty" validate:"gte=1,lte=65535"`
	Pid                          int32  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty" validate:"gte=1,lte=65535"`
	SoftwareVersion              uint32 `protobuf:"varint,4,opt,name=softwareVersion,proto3" json:"softwareVersion,omitempty"`
	SoftwareVersionString        string `protobuf:"bytes,5,opt,name=softwareVersionString,proto3" json:"softwareVersionString,omitempty" validate:"required,max=64"`
	CdVersionNumber              int32  `protobuf:"varint,6,opt,name=cdVersionNumber,proto3" json:"cdVersionNumber,omitempty" validate:"gte=0,lte=65535"`
	FirmwareInformation          string `protobuf:"bytes,7,opt,name=firmwareInformation,proto3" json:"firmwareInformation,omitempty" validate:"max=512"`
	SoftwareVersionValid         bool   `protobuf:"varint,8,opt,name=softwareVersionValid,proto3" json:"softwareVersionValid,omitempty"`
	OtaUrl                       string `protobuf:"bytes,9,opt,name=otaUrl,proto3" json:"otaUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	OtaFileSize                  uint64 `protobuf:"varint,10,opt,name=otaFileSize,proto3" json:"otaFileSize,omitempty" validate:"required_with=OtaUrl"`
	OtaChecksum                  string `protobuf:"bytes,11,opt,name=otaChecksum,proto3" json:"otaChecksum,omitempty" validate:"required_with=OtaUrl,max=64"`
	OtaChecksumType              int32  `protobuf:"varint,12,opt,name=otaChecksumType,proto3" json:"otaChecksumType,omitempty" validate:"required_with=OtaUrl,gte=0,lte=65535"`
	MinApplicableSoftwareVersion uint32 `protobuf:"varint,13,opt,name=minApplicableSoftwareVersion,proto3" json:"minApplicableSoftwareVersion,omitempty"`
	MaxApplicableSoftwareVersion uint32 `protobuf:"varint,14,opt,name=maxApplicableSoftwareVersion,proto3" json:"maxApplicableSoftwareVersion,omitempty" validate:"gtecsfield=MinApplicableSoftwareVersion"`
	ReleaseNotesUrl              string `protobuf:"bytes,15,opt,name=releaseNotesUrl,proto3" json:"releaseNotesUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	SchemaVersion                uint32 `protobuf:"varint,16,opt,name=schemaVersion,proto3" json:"schemaVersion,omitempty" validate:"gte=0,lte=65535"`
}

func (m *MsgCreateModelVersion) Reset()         { *m = MsgCreateModelVersion{} }
func (m *MsgCreateModelVersion) String() string { return proto.CompactTextString(m) }
func (*MsgCreateModelVersion) ProtoMessage()    {}
func (*MsgCreateModelVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_8898c625fa4755dc, []int{6}
}
func (m *MsgCreateModelVersion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateModelVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateModelVersion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateModelVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateModelVersion.Merge(m, src)
}
func (m *MsgCreateModelVersion) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateModelVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateModelVersion.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateModelVersion proto.InternalMessageInfo

func (m *MsgCreateModelVersion) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateModelVersion) GetVid() int32 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *MsgCreateModelVersion) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *MsgCreateModelVersion) GetSoftwareVersion() uint32 {
	if m != nil {
		return m.SoftwareVersion
	}
	return 0
}

func (m *MsgCreateModelVersion) GetSoftwareVersionString() string {
	if m != nil {
		return m.SoftwareVersionString
	}
	return ""
}

func (m *MsgCreateModelVersion) GetCdVersionNumber() int32 {
	if m != nil {
		return m.CdVersionNumber
	}
	return 0
}

func (m *MsgCreateModelVersion) GetFirmwareInformation() string {
	if m != nil {
		return m.FirmwareInformation
	}
	return ""
}

func (m *MsgCreateModelVersion) GetSoftwareVersionValid() bool {
	if m != nil {
		return m.SoftwareVersionValid
	}
	return false
}

func (m *MsgCreateModelVersion) GetOtaUrl() string {
	if m != nil {
		return m.OtaUrl
	}
	return ""
}

func (m *MsgCreateModelVersion) GetOtaFileSize() uint64 {
	if m != nil {
		return m.OtaFileSize
	}
	return 0
}

func (m *MsgCreateModelVersion) GetOtaChecksum() string {
	if m != nil {
		return m.OtaChecksum
	}
	return ""
}

func (m *MsgCreateModelVersion) GetOtaChecksumType() int32 {
	if m != nil {
		return m.OtaChecksumType
	}
	return 0
}

func (m *MsgCreateModelVersion) GetMinApplicableSoftwareVersion() uint32 {
	if m != nil {
		return m.MinApplicableSoftwareVersion
	}
	return 0
}

func (m *MsgCreateModelVersion) GetMaxApplicableSoftwareVersion() uint32 {
	if m != nil {
		return m.MaxApplicableSoftwareVersion
	}
	return 0
}

func (m *MsgCreateModelVersion) GetReleaseNotesUrl() string {
	if m != nil {
		return m.ReleaseNotesUrl
	}
	return ""
}

func (m *MsgCreateModelVersion) GetSchemaVersion() uint32 {
	if m != nil {
		return m.SchemaVersion
	}
	return 0
}

type MsgCreateModelVersionResponse struct {
}

func (m *MsgCreateModelVersionResponse) Reset()         { *m = MsgCreateModelVersionResponse{} }
func (m *MsgCreateModelVersionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateModelVersionResponse) ProtoMessage()    {}
func (*MsgCreateModelVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8898c625fa4755dc, []int{7}
}
func (m *MsgCreateModelVersionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateModelVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateModelVersionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateModelVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateModelVersionResponse.Merge(m, src)
}
func (m *MsgCreateModelVersionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateModelVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateModelVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateModelVersionResponse proto.InternalMessageInfo

type MsgUpdateModelVersion struct {
	Creator                      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty" validate:"required"`
	Vid                          int32  `protobuf:"varint,2,opt,name=vid,proto3" json:"vid,omitempty" validate:"gte=1,lte=65535"`
	Pid                          int32  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty" validate:"gte=1,lte=65535"`
	SoftwareVersion              uint32 `protobuf:"varint,4,opt,name=softwareVersion,proto3" json:"softwareVersion,omitempty"`
	SoftwareVersionValid         bool   `protobuf:"varint,5,opt,name=softwareVersionValid,proto3" json:"softwareVersionValid,omitempty"`
	OtaUrl                       string `protobuf:"bytes,6,opt,name=otaUrl,proto3" json:"otaUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	MinApplicableSoftwareVersion uint32 `protobuf:"varint,7,opt,name=minApplicableSoftwareVersion,proto3" json:"minApplicableSoftwareVersion,omitempty"`
	MaxApplicableSoftwareVersion uint32 `protobuf:"varint,8,opt,name=maxApplicableSoftwareVersion,proto3" json:"maxApplicableSoftwareVersion,omitempty" validate:"omitempty,gtecsfield=MinApplicableSoftwareVersion"`
	ReleaseNotesUrl              string `protobuf:"bytes,9,opt,name=releaseNotesUrl,proto3" json:"releaseNotesUrl,omitempty" validate:"omitempty,url,startsnotwith=http:,max=256"`
	OtaFileSize                  uint64 `protobuf:"varint,10,opt,name=otaFileSize,proto3" json:"otaFileSize,omitempty"`
	OtaChecksum                  string `protobuf:"bytes,11,opt,name=otaChecksum,proto3" json:"otaChecksum,omitempty" validate:"max=64"`
	SchemaVersion                uint32 `protobuf:"varint,12,opt,name=schemaVersion,proto3" json:"schemaVersion,omitempty" validate:"gte=0,lte=65535"`
}

func (m *MsgUpdateModelVersion) Reset()         { *m = MsgUpdateModelVersion{} }
func (m *MsgUpdateModelVersion) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateModelVersion) ProtoMessage()    {}
func (*MsgUpdateModelVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_8898c625fa4755dc, []int{8}
}
func (m *MsgUpdateModelVersion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateModelVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateModelVersion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateModelVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateModelVersion.Merge(m, src)
}
func (m *MsgUpdateModelVersion) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateModelVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateModelVersion.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateModelVersion proto.InternalMessageInfo

func (m *MsgUpdateModelVersion) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateModelVersion) GetVid() int32 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *MsgUpdateModelVersion) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *MsgUpdateModelVersion) GetSoftwareVersion() uint32 {
	if m != nil {
		return m.SoftwareVersion
	}
	return 0
}

func (m *MsgUpdateModelVersion) GetSoftwareVersionValid() bool {
	if m != nil {
		return m.SoftwareVersionValid
	}
	return false
}

func (m *MsgUpdateModelVersion) GetOtaUrl() string {
	if m != nil {
		return m.OtaUrl
	}
	return ""
}

func (m *MsgUpdateModelVersion) GetMinApplicableSoftwareVersion() uint32 {
	if m != nil {
		return m.MinApplicableSoftwareVersion
	}
	return 0
}

func (m *MsgUpdateModelVersion) GetMaxApplicableSoftwareVersion() uint32 {
	if m != nil {
		return m.MaxApplicableSoftwareVersion
	}
	return 0
}

func (m *MsgUpdateModelVersion) GetReleaseNotesUrl() string {
	if m != nil {
		return m.ReleaseNotesUrl
	}
	return ""
}

func (m *MsgUpdateModelVersion) GetOtaFileSize() uint64 {
	if m != nil {
		return m.OtaFileSize
	}
	return 0
}

func (m *MsgUpdateModelVersion) GetOtaChecksum() string {
	if m != nil {
		return m.OtaChecksum
	}
	return ""
}

func (m *MsgUpdateModelVersion) GetSchemaVersion() uint32 {
	if m != nil {
		return m.SchemaVersion
	}
	return 0
}

type MsgUpdateModelVersionResponse struct {
}

func (m *MsgUpdateModelVersionResponse) Reset()         { *m = MsgUpdateModelVersionResponse{} }
func (m *MsgUpdateModelVersionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateModelVersionResponse) ProtoMessage()    {}
func (*MsgUpdateModelVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8898c625fa4755dc, []int{9}
}
func (m *MsgUpdateModelVersionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateModelVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateModelVersionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateModelVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateModelVersionResponse.Merge(m, src)
}
func (m *MsgUpdateModelVersionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateModelVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateModelVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateModelVersionResponse proto.InternalMessageInfo

type MsgDeleteModelVersion struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty" validate:"required"`
	Vid             int32  `protobuf:"varint,2,opt,name=vid,proto3" json:"vid,omitempty" validate:"gte=1,lte=65535"`
	Pid             int32  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty" validate:"gte=1,lte=65535"`
	SoftwareVersion uint32 `protobuf:"varint,4,opt,name=softwareVersion,proto3" json:"softwareVersion,omitempty"`
}

func (m *MsgDeleteModelVersion) Reset()         { *m = MsgDeleteModelVersion{} }
func (m *MsgDeleteModelVersion) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteModelVersion) ProtoMessage()    {}
func (*MsgDeleteModelVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_8898c625fa4755dc, []int{10}
}
func (m *MsgDeleteModelVersion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteModelVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteModelVersion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteModelVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteModelVersion.Merge(m, src)
}
func (m *MsgDeleteModelVersion) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteModelVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteModelVersion.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteModelVersion proto.InternalMessageInfo

func (m *MsgDeleteModelVersion) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteModelVersion) GetVid() int32 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *MsgDeleteModelVersion) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *MsgDeleteModelVersion) GetSoftwareVersion() uint32 {
	if m != nil {
		return m.SoftwareVersion
	}
	return 0
}

type MsgDeleteModelVersionResponse struct {
}

func (m *MsgDeleteModelVersionResponse) Reset()         { *m = MsgDeleteModelVersionResponse{} }
func (m *MsgDeleteModelVersionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteModelVersionResponse) ProtoMessage()    {}
func (*MsgDeleteModelVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8898c625fa4755dc, []int{11}
}
func (m *MsgDeleteModelVersionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteModelVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteModelVersionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteModelVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteModelVersionResponse.Merge(m, src)
}
func (m *MsgDeleteModelVersionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteModelVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteModelVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteModelVersionResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateModel)(nil), "zigbeealliance.distributedcomplianceledger.model.MsgCreateModel")
	proto.RegisterType((*MsgCreateModelResponse)(nil), "zigbeealliance.distributedcomplianceledger.model.MsgCreateModelResponse")
	proto.RegisterType((*MsgUpdateModel)(nil), "zigbeealliance.distributedcomplianceledger.model.MsgUpdateModel")
	proto.RegisterType((*MsgUpdateModelResponse)(nil), "zigbeealliance.distributedcomplianceledger.model.MsgUpdateModelResponse")
	proto.RegisterType((*MsgDeleteModel)(nil), "zigbeealliance.distributedcomplianceledger.model.MsgDeleteModel")
	proto.RegisterType((*MsgDeleteModelResponse)(nil), "zigbeealliance.distributedcomplianceledger.model.MsgDeleteModelResponse")
	proto.RegisterType((*MsgCreateModelVersion)(nil), "zigbeealliance.distributedcomplianceledger.model.MsgCreateModelVersion")
	proto.RegisterType((*MsgCreateModelVersionResponse)(nil), "zigbeealliance.distributedcomplianceledger.model.MsgCreateModelVersionResponse")
	proto.RegisterType((*MsgUpdateModelVersion)(nil), "zigbeealliance.distributedcomplianceledger.model.MsgUpdateModelVersion")
	proto.RegisterType((*MsgUpdateModelVersionResponse)(nil), "zigbeealliance.distributedcomplianceledger.model.MsgUpdateModelVersionResponse")
	proto.RegisterType((*MsgDeleteModelVersion)(nil), "zigbeealliance.distributedcomplianceledger.model.MsgDeleteModelVersion")
	proto.RegisterType((*MsgDeleteModelVersionResponse)(nil), "zigbeealliance.distributedcomplianceledger.model.MsgDeleteModelVersionResponse")
}

func init() { proto.RegisterFile("model/tx.proto", fileDescriptor_8898c625fa4755dc) }

var fileDescriptor_8898c625fa4755dc = []byte{
	// 1370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x59, 0x4d, 0x6f, 0xdb, 0x36,
	0x18, 0xae, 0xd6, 0x7c, 0x32, 0x5f, 0x2d, 0xfb, 0xa5, 0xb9, 0x9d, 0x95, 0xa9, 0xc0, 0x10, 0x14,
	0x49, 0x9c, 0x3a, 0x4d, 0x56, 0x14, 0x0b, 0xd0, 0x3a, 0x5d, 0x9b, 0x00, 0x4d, 0x5b, 0x28, 0x6d,
	0x31, 0x14, 0x58, 0x3b, 0x59, 0xa2, 0x1d, 0x62, 0x92, 0xa8, 0x91, 0x54, 0xbe, 0xce, 0xfb, 0x01,
	0xbb, 0xee, 0xb2, 0x9f, 0xb0, 0xd3, 0xce, 0xdb, 0x6d, 0xd8, 0xb1, 0xd8, 0x69, 0x27, 0x61, 0x68,
	0x81, 0x9d, 0x76, 0x18, 0xf4, 0x0b, 0x06, 0xd1, 0x72, 0x2c, 0xd9, 0xf2, 0x47, 0x2c, 0xfb, 0xd0,
	0x5e, 0x0c, 0x8b, 0xe4, 0xf3, 0xf0, 0x7d, 0xc9, 0xf7, 0x7d, 0x5e, 0x52, 0x02, 0xb3, 0x36, 0x31,
	0x91, 0x55, 0xe0, 0x87, 0xcb, 0x2e, 0x25, 0x9c, 0xc0, 0x95, 0x63, 0x5c, 0x2d, 0x23, 0xa4, 0x5b,
	0x16, 0xd6, 0x1d, 0x03, 0x2d, 0x9b, 0x98, 0x71, 0x8a, 0xcb, 0x1e, 0x47, 0xa6, 0x41, 0x6c, 0xb7,
	0xd6, 0x6a, 0x21, 0xb3, 0x8a, 0xe8, 0xb2, 0x80, 0xe6, 0xce, 0xd7, 0x18, 0xc4, 0x6f, 0x8d, 0x24,
	0xf7, 0x71, 0xac, 0xe9, 0xf5, 0x3e, 0xa2, 0x0c, 0x13, 0x27, 0xea, 0xba, 0x58, 0x25, 0x55, 0x22,
	0xfe, 0x16, 0xc2, 0x7f, 0x75, 0x80, 0x41, 0x98, 0x4d, 0xd8, 0xeb, 0x5a, 0x47, 0xed, 0xa1, 0xd6,
	0xa5, 0xfe, 0x33, 0x0d, 0x66, 0x77, 0x58, 0x75, 0x93, 0x22, 0x9d, 0xa3, 0x9d, 0x90, 0x11, 0x6e,
	0x83, 0x71, 0x23, 0x7c, 0x24, 0x54, 0x96, 0xe6, 0xa5, 0x85, 0xc9, 0x52, 0x21, 0xf0, 0x95, 0x0b,
	0xfb, 0xba, 0x85, 0x4d, 0x9d, 0xa3, 0x3b, 0x2a, 0x45, 0xdf, 0x79, 0x98, 0x22, 0x53, 0xfd, 0xf3,
	0x97, 0xa5, 0x8b, 0x11, 0xd9, 0x3d, 0xd3, 0xa4, 0x88, 0xb1, 0x5d, 0x4e, 0xb1, 0x53, 0xd5, 0xea,
	0x78, 0xb8, 0x02, 0xce, 0xee, 0x63, 0x53, 0xfe, 0x68, 0x5e, 0x5a, 0x18, 0x2d, 0xe5, 0x03, 0x5f,
	0xc9, 0x35, 0x68, 0xaa, 0x1c, 0x6d, 0xdc, 0x5c, 0xb4, 0x38, 0xda, 0x58, 0x5f, 0x5b, 0x5b, 0x5d,
	0x53, 0xb5, 0x70, 0x68, 0x88, 0x70, 0xb1, 0x29, 0x9f, 0xed, 0x0d, 0xe1, 0x62, 0x13, 0x96, 0xc0,
	0xb4, 0x89, 0xf6, 0xb1, 0x81, 0x9e, 0x1d, 0xb9, 0x68, 0xdb, 0x94, 0x47, 0xda, 0x41, 0x57, 0xe2,
	0xd0, 0x04, 0x06, 0xde, 0x03, 0x53, 0x2e, 0x25, 0xa6, 0x67, 0xf0, 0xc7, 0xba, 0x8d, 0xe4, 0x51,
	0xe1, 0xb6, 0x12, 0xf8, 0xca, 0xd5, 0x56, 0xb7, 0x17, 0x6d, 0xfd, 0x70, 0xe3, 0x66, 0xf1, 0xb6,
	0xaa, 0xc5, 0x31, 0xf0, 0x0e, 0x98, 0x8e, 0x1e, 0x1f, 0xe9, 0x65, 0x64, 0xc9, 0x63, 0x82, 0xe3,
	0x72, 0xe0, 0x2b, 0xb0, 0xc1, 0x11, 0x42, 0x8b, 0x6b, 0xeb, 0xaa, 0x96, 0x18, 0x0b, 0xd7, 0x00,
	0x70, 0x75, 0xca, 0x1f, 0x7b, 0x76, 0x19, 0x51, 0x79, 0x5c, 0x20, 0x2f, 0x05, 0xbe, 0x72, 0x3e,
	0x89, 0x5c, 0x2d, 0xaa, 0x5a, 0x6c, 0x20, 0x7c, 0x06, 0xae, 0x18, 0xc4, 0xb6, 0x31, 0x0b, 0x03,
	0x00, 0x3b, 0xd5, 0x4d, 0x8f, 0x71, 0x62, 0x3f, 0xb0, 0xc8, 0x81, 0x3c, 0x21, 0x16, 0x21, 0x17,
	0xf8, 0xca, 0xe5, 0xb4, 0x45, 0x28, 0xaa, 0x5a, 0x3b, 0x28, 0xfc, 0x49, 0x02, 0xb9, 0x36, 0x7d,
	0xcf, 0xa9, 0x25, 0x4f, 0x0a, 0xeb, 0x5e, 0x05, 0xbe, 0xf2, 0xb2, 0x75, 0x6d, 0x5e, 0xe3, 0xca,
	0xc6, 0x66, 0x3a, 0x76, 0xbe, 0xb8, 0x48, 0x6c, 0xcc, 0x91, 0xed, 0xf2, 0xa3, 0x45, 0x8f, 0x5a,
	0x8b, 0x8c, 0xeb, 0x94, 0x33, 0x87, 0xf0, 0x03, 0xcc, 0xf7, 0x36, 0xf6, 0x38, 0x77, 0xef, 0x2c,
	0x9e, 0xac, 0x4f, 0x07, 0x0b, 0xe0, 0x23, 0xf0, 0x69, 0xa2, 0x37, 0x8c, 0xda, 0x6d, 0x07, 0x73,
	0xac, 0x5b, 0xbb, 0x1c, 0xb9, 0x6c, 0x0b, 0x3b, 0x5c, 0x06, 0xf3, 0xd2, 0xc2, 0x8c, 0xd6, 0x7d,
	0x20, 0x64, 0x60, 0xa1, 0xe3, 0xa0, 0x6d, 0x87, 0x71, 0xea, 0x19, 0x1c, 0x13, 0x47, 0x9e, 0x12,
	0xbe, 0x5f, 0x49, 0xa6, 0x83, 0x08, 0x87, 0x95, 0xe2, 0x2d, 0x55, 0xeb, 0x99, 0x08, 0x3e, 0x05,
	0xd7, 0x5b, 0xc6, 0xee, 0x22, 0x83, 0x38, 0xa6, 0x4e, 0x8f, 0x1a, 0x4e, 0x4c, 0x0b, 0x27, 0x7a,
	0x19, 0x0a, 0x0f, 0xc0, 0x8d, 0x2e, 0xc3, 0xe2, 0x8e, 0xcc, 0x74, 0x76, 0xe4, 0x14, 0x54, 0xf0,
	0x15, 0x98, 0xf1, 0x18, 0xa2, 0x3b, 0xba, 0xe3, 0xe9, 0x56, 0x18, 0x20, 0xb3, 0x82, 0xfb, 0x76,
	0xe0, 0x2b, 0xb7, 0x1a, 0xdc, 0xa7, 0xd8, 0xfa, 0x24, 0x1d, 0xfc, 0x0a, 0x00, 0xe6, 0xb9, 0x2e,
	0xa1, 0x3c, 0x24, 0x9f, 0xcb, 0x48, 0x1e, 0xe3, 0x0a, 0x99, 0xa3, 0x2c, 0x0c, 0x99, 0xcf, 0x65,
	0x65, 0x6e, 0x70, 0xc1, 0xa7, 0x60, 0xcc, 0x62, 0x95, 0x90, 0xf5, 0x7c, 0x46, 0xd6, 0x88, 0x07,
	0xde, 0x07, 0x33, 0xcc, 0xd8, 0x43, 0xb6, 0xfe, 0xa2, 0x26, 0xf7, 0x32, 0x0c, 0x43, 0xa3, 0xab,
	0xca, 0x25, 0x41, 0xf0, 0x18, 0x5c, 0x6d, 0xec, 0x2c, 0xa2, 0x1a, 0xb2, 0x09, 0x47, 0xcf, 0x71,
	0x3d, 0xb5, 0x2f, 0x64, 0x34, 0xb6, 0x13, 0xb9, 0x2a, 0x83, 0xcb, 0xc9, 0x3a, 0xa3, 0x21, 0xe6,
	0x12, 0x87, 0x21, 0xf5, 0x57, 0x20, 0x4a, 0xd0, 0x73, 0xd7, 0x7c, 0x5f, 0x4b, 0xd0, 0xed, 0x64,
	0xf9, 0x18, 0x69, 0x27, 0xfd, 0xdd, 0xab, 0xc6, 0x68, 0xdf, 0x55, 0x63, 0xac, 0xd7, 0xaa, 0x71,
	0xd8, 0x51, 0xde, 0xc7, 0x33, 0xc6, 0x40, 0x27, 0xe1, 0x3e, 0x8d, 0xd4, 0x4e, 0x0c, 0x4a, 0x6a,
	0x4f, 0x27, 0x8c, 0x93, 0x43, 0x14, 0x46, 0x30, 0x4c, 0x61, 0x9c, 0x1a, 0x9a, 0x30, 0x4e, 0x0f,
	0x45, 0x18, 0x67, 0x06, 0x24, 0x8c, 0x77, 0xc1, 0x94, 0xc5, 0x2a, 0x1a, 0xda, 0xc7, 0x42, 0x16,
	0x67, 0x7b, 0x3a, 0xfc, 0xc5, 0x21, 0xad, 0xd2, 0x3a, 0x37, 0x04, 0x69, 0x3d, 0x37, 0x7c, 0x69,
	0x8d, 0xe9, 0xe7, 0x89, 0xb4, 0xfe, 0x26, 0x09, 0x69, 0xbd, 0x8f, 0x2c, 0xf4, 0x7e, 0x4a, 0x6b,
	0xe4, 0x5b, 0xcc, 0x81, 0x46, 0xd9, 0x98, 0x04, 0x97, 0x92, 0x15, 0xa5, 0xbe, 0x17, 0xef, 0x59,
	0xf5, 0x58, 0x00, 0x73, 0x8c, 0x54, 0xf8, 0x81, 0x4e, 0x51, 0x3d, 0x04, 0x47, 0xc4, 0xc1, 0xaf,
	0xb9, 0x19, 0x3e, 0x03, 0x97, 0x9a, 0x9a, 0x6a, 0xf6, 0x46, 0x65, 0xa3, 0x69, 0xb6, 0xc4, 0x85,
	0x65, 0xfd, 0x96, 0xaa, 0xa5, 0x83, 0xe1, 0x16, 0x98, 0x33, 0xcc, 0xa8, 0x29, 0x56, 0x4c, 0xba,
	0xa7, 0x51, 0x33, 0x0c, 0x6e, 0x81, 0x0b, 0x15, 0x4c, 0xed, 0x70, 0x8a, 0x6d, 0xa7, 0x42, 0xa8,
	0xad, 0x0b, 0x51, 0x1d, 0x6f, 0x57, 0xd4, 0xd6, 0x6e, 0x16, 0x55, 0x2d, 0x0d, 0x02, 0x8b, 0xe0,
	0x62, 0x93, 0xb1, 0x2f, 0x42, 0xa4, 0x28, 0x0b, 0x13, 0x5a, 0x6a, 0x5f, 0x28, 0x2e, 0x84, 0xeb,
	0x8d, 0x3b, 0x4a, 0x06, 0x71, 0xa9, 0xf1, 0xc0, 0x2f, 0xc1, 0x14, 0xe1, 0xfa, 0x03, 0x6c, 0xa1,
	0x5d, 0x7c, 0x8c, 0x84, 0x80, 0x8f, 0x94, 0xae, 0x07, 0xbe, 0xa2, 0xa4, 0x5c, 0x7d, 0x04, 0xd1,
	0x13, 0x01, 0x54, 0xb5, 0x38, 0x0e, 0x3e, 0x12, 0x34, 0x9b, 0x7b, 0xc8, 0xf8, 0x96, 0x79, 0x76,
	0x24, 0xd5, 0x37, 0x02, 0x5f, 0xf9, 0xac, 0x33, 0xcd, 0xc9, 0xc6, 0xc5, 0xe1, 0xf0, 0x6b, 0x30,
	0x17, 0x7b, 0x0c, 0x2f, 0xb0, 0x42, 0xa2, 0x47, 0x4b, 0xab, 0x81, 0xaf, 0x14, 0xba, 0x30, 0xb6,
	0xee, 0x61, 0x13, 0x17, 0x2c, 0x81, 0x6b, 0x36, 0x76, 0xee, 0xb9, 0xae, 0x85, 0x0d, 0xbd, 0x6c,
	0xa1, 0xdd, 0xa6, 0xd0, 0x9c, 0x11, 0xa1, 0xd9, 0x71, 0x0c, 0x3c, 0x06, 0xd7, 0x6c, 0xfd, 0xb0,
	0x3d, 0xc7, 0xac, 0x50, 0xd8, 0xf5, 0xc0, 0x57, 0x8a, 0x89, 0xf0, 0x32, 0x58, 0x05, 0x23, 0xcb,
	0xdc, 0xd8, 0xe9, 0x40, 0xae, 0x6a, 0x1d, 0xb9, 0x61, 0x19, 0xcc, 0x51, 0x64, 0x21, 0x9d, 0xa1,
	0xc7, 0x84, 0x23, 0x36, 0x88, 0x4b, 0x43, 0x33, 0x61, 0x6b, 0xc9, 0x38, 0xd7, 0x47, 0xc9, 0x50,
	0x15, 0xf0, 0x49, 0xaa, 0x7e, 0x9d, 0x28, 0xdc, 0xef, 0x63, 0x42, 0xe1, 0x62, 0xc2, 0xfe, 0xc1,
	0x2b, 0x5c, 0xbb, 0xbc, 0x1f, 0xed, 0x29, 0xef, 0xc7, 0x06, 0x94, 0xf7, 0xdd, 0x72, 0x60, 0xbc,
	0x87, 0x1c, 0xf8, 0x5e, 0xea, 0x92, 0x04, 0x13, 0x22, 0x66, 0xee, 0x06, 0xbe, 0xf2, 0x45, 0x9a,
	0xb1, 0xc3, 0x4b, 0x87, 0xc9, 0x41, 0xa7, 0xc3, 0x7c, 0x8a, 0x4c, 0x26, 0x15, 0xf0, 0xf3, 0x34,
	0x05, 0x4c, 0xb9, 0xab, 0xb4, 0x88, 0x5d, 0x4b, 0xa6, 0x4d, 0xf7, 0x9f, 0x69, 0xad, 0x79, 0x74,
	0x92, 0x69, 0xff, 0x49, 0x22, 0xd3, 0x62, 0xc7, 0x8c, 0x0f, 0x3d, 0xd3, 0xa2, 0x35, 0x69, 0xf5,
	0xb8, 0xbe, 0x26, 0xc5, 0x7f, 0xc7, 0xc1, 0xd9, 0x1d, 0x56, 0x85, 0x3f, 0x4a, 0x60, 0x2a, 0xfe,
	0x7a, 0xf8, 0xee, 0xf2, 0x69, 0xdf, 0x61, 0x2f, 0x27, 0x65, 0x2e, 0xb7, 0x95, 0x95, 0xa1, 0x6e,
	0xa3, 0xb0, 0x2d, 0xfe, 0xde, 0xa0, 0x3f, 0xdb, 0x62, 0x0c, 0x7d, 0xda, 0x96, 0x72, 0xf6, 0x16,
	0xb6, 0xc5, 0x0f, 0xde, 0xfd, 0xd9, 0x16, 0x63, 0xe8, 0xd3, 0xb6, 0x94, 0xb3, 0x33, 0xfc, 0x59,
	0x02, 0x30, 0xe5, 0xe0, 0xfc, 0x30, 0xeb, 0xc6, 0x44, 0x44, 0xb9, 0x27, 0x03, 0x22, 0x4a, 0x18,
	0x9c, 0x52, 0x07, 0x1f, 0x66, 0xdd, 0xad, 0x6c, 0x06, 0xb7, 0x57, 0x14, 0x61, 0x70, 0x8a, 0x9c,
	0x3c, 0xcc, 0xba, 0x85, 0xd9, 0x0c, 0x6e, 0x9f, 0xee, 0xa5, 0x6f, 0xfe, 0x78, 0x9b, 0x97, 0xde,
	0xbc, 0xcd, 0x4b, 0x7f, 0xbf, 0xcd, 0x4b, 0x3f, 0xbc, 0xcb, 0x9f, 0x79, 0xf3, 0x2e, 0x7f, 0xe6,
	0xaf, 0x77, 0xf9, 0x33, 0x2f, 0x1f, 0x54, 0x31, 0xdf, 0xf3, 0xca, 0xcb, 0x06, 0xb1, 0x0b, 0xb5,
	0x49, 0x97, 0xea, 0xb3, 0x16, 0x62, 0xb3, 0x2e, 0x35, 0xa6, 0x5d, 0xaa, 0xcd, 0x5b, 0x38, 0x2c,
	0x44, 0x9f, 0xbf, 0x8e, 0x5c, 0xc4, 0xca, 0x63, 0xe2, 0x8b, 0xd3, 0xea, 0xff, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xa4, 0x5c, 0x59, 0x3e, 0x14, 0x1b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateModel(ctx context.Context, in *MsgCreateModel, opts ...grpc.CallOption) (*MsgCreateModelResponse, error)
	UpdateModel(ctx context.Context, in *MsgUpdateModel, opts ...grpc.CallOption) (*MsgUpdateModelResponse, error)
	DeleteModel(ctx context.Context, in *MsgDeleteModel, opts ...grpc.CallOption) (*MsgDeleteModelResponse, error)
	CreateModelVersion(ctx context.Context, in *MsgCreateModelVersion, opts ...grpc.CallOption) (*MsgCreateModelVersionResponse, error)
	UpdateModelVersion(ctx context.Context, in *MsgUpdateModelVersion, opts ...grpc.CallOption) (*MsgUpdateModelVersionResponse, error)
	DeleteModelVersion(ctx context.Context, in *MsgDeleteModelVersion, opts ...grpc.CallOption) (*MsgDeleteModelVersionResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateModel(ctx context.Context, in *MsgCreateModel, opts ...grpc.CallOption) (*MsgCreateModelResponse, error) {
	out := new(MsgCreateModelResponse)
	err := c.cc.Invoke(ctx, "/zigbeealliance.distributedcomplianceledger.model.Msg/CreateModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateModel(ctx context.Context, in *MsgUpdateModel, opts ...grpc.CallOption) (*MsgUpdateModelResponse, error) {
	out := new(MsgUpdateModelResponse)
	err := c.cc.Invoke(ctx, "/zigbeealliance.distributedcomplianceledger.model.Msg/UpdateModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteModel(ctx context.Context, in *MsgDeleteModel, opts ...grpc.CallOption) (*MsgDeleteModelResponse, error) {
	out := new(MsgDeleteModelResponse)
	err := c.cc.Invoke(ctx, "/zigbeealliance.distributedcomplianceledger.model.Msg/DeleteModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateModelVersion(ctx context.Context, in *MsgCreateModelVersion, opts ...grpc.CallOption) (*MsgCreateModelVersionResponse, error) {
	out := new(MsgCreateModelVersionResponse)
	err := c.cc.Invoke(ctx, "/zigbeealliance.distributedcomplianceledger.model.Msg/CreateModelVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateModelVersion(ctx context.Context, in *MsgUpdateModelVersion, opts ...grpc.CallOption) (*MsgUpdateModelVersionResponse, error) {
	out := new(MsgUpdateModelVersionResponse)
	err := c.cc.Invoke(ctx, "/zigbeealliance.distributedcomplianceledger.model.Msg/UpdateModelVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteModelVersion(ctx context.Context, in *MsgDeleteModelVersion, opts ...grpc.CallOption) (*MsgDeleteModelVersionResponse, error) {
	out := new(MsgDeleteModelVersionResponse)
	err := c.cc.Invoke(ctx, "/zigbeealliance.distributedcomplianceledger.model.Msg/DeleteModelVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateModel(context.Context, *MsgCreateModel) (*MsgCreateModelResponse, error)
	UpdateModel(context.Context, *MsgUpdateModel) (*MsgUpdateModelResponse, error)
	DeleteModel(context.Context, *MsgDeleteModel) (*MsgDeleteModelResponse, error)
	CreateModelVersion(context.Context, *MsgCreateModelVersion) (*MsgCreateModelVersionResponse, error)
	UpdateModelVersion(context.Context, *MsgUpdateModelVersion) (*MsgUpdateModelVersionResponse, error)
	DeleteModelVersion(context.Context, *MsgDeleteModelVersion) (*MsgDeleteModelVersionResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateModel(ctx context.Context, req *MsgCreateModel) (*MsgCreateModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateModel not implemented")
}
func (*UnimplementedMsgServer) UpdateModel(ctx context.Context, req *MsgUpdateModel) (*MsgUpdateModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateModel not implemented")
}
func (*UnimplementedMsgServer) DeleteModel(ctx context.Context, req *MsgDeleteModel) (*MsgDeleteModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModel not implemented")
}
func (*UnimplementedMsgServer) CreateModelVersion(ctx context.Context, req *MsgCreateModelVersion) (*MsgCreateModelVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateModelVersion not implemented")
}
func (*UnimplementedMsgServer) UpdateModelVersion(ctx context.Context, req *MsgUpdateModelVersion) (*MsgUpdateModelVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateModelVersion not implemented")
}
func (*UnimplementedMsgServer) DeleteModelVersion(ctx context.Context, req *MsgDeleteModelVersion) (*MsgDeleteModelVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModelVersion not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zigbeealliance.distributedcomplianceledger.model.Msg/CreateModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateModel(ctx, req.(*MsgCreateModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zigbeealliance.distributedcomplianceledger.model.Msg/UpdateModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateModel(ctx, req.(*MsgUpdateModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zigbeealliance.distributedcomplianceledger.model.Msg/DeleteModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteModel(ctx, req.(*MsgDeleteModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateModelVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateModelVersion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateModelVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zigbeealliance.distributedcomplianceledger.model.Msg/CreateModelVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateModelVersion(ctx, req.(*MsgCreateModelVersion))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateModelVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateModelVersion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateModelVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zigbeealliance.distributedcomplianceledger.model.Msg/UpdateModelVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateModelVersion(ctx, req.(*MsgUpdateModelVersion))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteModelVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteModelVersion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteModelVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zigbeealliance.distributedcomplianceledger.model.Msg/DeleteModelVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteModelVersion(ctx, req.(*MsgDeleteModelVersion))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zigbeealliance.distributedcomplianceledger.model.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateModel",
			Handler:    _Msg_CreateModel_Handler,
		},
		{
			MethodName: "UpdateModel",
			Handler:    _Msg_UpdateModel_Handler,
		},
		{
			MethodName: "DeleteModel",
			Handler:    _Msg_DeleteModel_Handler,
		},
		{
			MethodName: "CreateModelVersion",
			Handler:    _Msg_CreateModelVersion_Handler,
		},
		{
			MethodName: "UpdateModelVersion",
			Handler:    _Msg_UpdateModelVersion_Handler,
		},
		{
			MethodName: "DeleteModelVersion",
			Handler:    _Msg_DeleteModelVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "model/tx.proto",
}

func (m *MsgCreateModel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateModel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateModel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CommissionerRemoteUiFlowUrl) > 0 {
		i -= len(m.CommissionerRemoteUiFlowUrl)
		copy(dAtA[i:], m.CommissionerRemoteUiFlowUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CommissionerRemoteUiFlowUrl)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if m.SchemaVersion != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SchemaVersion))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if len(m.LsfUrl) > 0 {
		i -= len(m.LsfUrl)
		copy(dAtA[i:], m.LsfUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LsfUrl)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.ProductUrl) > 0 {
		i -= len(m.ProductUrl)
		copy(dAtA[i:], m.ProductUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProductUrl)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.SupportUrl) > 0 {
		i -= len(m.SupportUrl)
		copy(dAtA[i:], m.SupportUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SupportUrl)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.UserManualUrl) > 0 {
		i -= len(m.UserManualUrl)
		copy(dAtA[i:], m.UserManualUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UserManualUrl)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.CommissioningModeSecondaryStepsInstruction) > 0 {
		i -= len(m.CommissioningModeSecondaryStepsInstruction)
		copy(dAtA[i:], m.CommissioningModeSecondaryStepsInstruction)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CommissioningModeSecondaryStepsInstruction)))
		i--
		dAtA[i] = 0x6a
	}
	if m.CommissioningModeSecondaryStepsHint != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CommissioningModeSecondaryStepsHint))
		i--
		dAtA[i] = 0x60
	}
	if len(m.CommissioningModeInitialStepsInstruction) > 0 {
		i -= len(m.CommissioningModeInitialStepsInstruction)
		copy(dAtA[i:], m.CommissioningModeInitialStepsInstruction)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CommissioningModeInitialStepsInstruction)))
		i--
		dAtA[i] = 0x5a
	}
	if m.CommissioningModeInitialStepsHint != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CommissioningModeInitialStepsHint))
		i--
		dAtA[i] = 0x50
	}
	if len(m.CommissioningCustomFlowUrl) > 0 {
		i -= len(m.CommissioningCustomFlowUrl)
		copy(dAtA[i:], m.CommissioningCustomFlowUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CommissioningCustomFlowUrl)))
		i--
		dAtA[i] = 0x4a
	}
	if m.CommissioningCustomFlow != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CommissioningCustomFlow))
		i--
		dAtA[i] = 0x40
	}
	if len(m.PartNumber) > 0 {
		i -= len(m.PartNumber)
		copy(dAtA[i:], m.PartNumber)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PartNumber)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ProductLabel) > 0 {
		i -= len(m.ProductLabel)
		copy(dAtA[i:], m.ProductLabel)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProductLabel)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ProductName) > 0 {
		i -= len(m.ProductName)
		copy(dAtA[i:], m.ProductName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProductName)))
		i--
		dAtA[i] = 0x2a
	}
	if m.DeviceTypeId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DeviceTypeId))
		i--
		dAtA[i] = 0x20
	}
	if m.Pid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Pid))
		i--
		dAtA[i] = 0x18
	}
	if m.Vid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Vid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateModelResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateModelResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateModelResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateModel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateModel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateModel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CommissionerRemoteUiFlowUrl) > 0 {
		i -= len(m.CommissionerRemoteUiFlowUrl)
		copy(dAtA[i:], m.CommissionerRemoteUiFlowUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CommissionerRemoteUiFlowUrl)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.SchemaVersion != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SchemaVersion))
		i--
		dAtA[i] = 0x78
	}
	if m.LsfRevision != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LsfRevision))
		i--
		dAtA[i] = 0x70
	}
	if len(m.LsfUrl) > 0 {
		i -= len(m.LsfUrl)
		copy(dAtA[i:], m.LsfUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LsfUrl)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.ProductUrl) > 0 {
		i -= len(m.ProductUrl)
		copy(dAtA[i:], m.ProductUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProductUrl)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.SupportUrl) > 0 {
		i -= len(m.SupportUrl)
		copy(dAtA[i:], m.SupportUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SupportUrl)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.UserManualUrl) > 0 {
		i -= len(m.UserManualUrl)
		copy(dAtA[i:], m.UserManualUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UserManualUrl)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.CommissioningModeSecondaryStepsInstruction) > 0 {
		i -= len(m.CommissioningModeSecondaryStepsInstruction)
		copy(dAtA[i:], m.CommissioningModeSecondaryStepsInstruction)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CommissioningModeSecondaryStepsInstruction)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.CommissioningModeInitialStepsInstruction) > 0 {
		i -= len(m.CommissioningModeInitialStepsInstruction)
		copy(dAtA[i:], m.CommissioningModeInitialStepsInstruction)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CommissioningModeInitialStepsInstruction)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.CommissioningCustomFlowUrl) > 0 {
		i -= len(m.CommissioningCustomFlowUrl)
		copy(dAtA[i:], m.CommissioningCustomFlowUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CommissioningCustomFlowUrl)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.PartNumber) > 0 {
		i -= len(m.PartNumber)
		copy(dAtA[i:], m.PartNumber)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PartNumber)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ProductLabel) > 0 {
		i -= len(m.ProductLabel)
		copy(dAtA[i:], m.ProductLabel)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProductLabel)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ProductName) > 0 {
		i -= len(m.ProductName)
		copy(dAtA[i:], m.ProductName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProductName)))
		i--
		dAtA[i] = 0x22
	}
	if m.Pid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Pid))
		i--
		dAtA[i] = 0x18
	}
	if m.Vid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Vid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateModelResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateModelResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateModelResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteModel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteModel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteModel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Pid))
		i--
		dAtA[i] = 0x18
	}
	if m.Vid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Vid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteModelResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteModelResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteModelResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateModelVersion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateModelVersion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateModelVersion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SchemaVersion != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SchemaVersion))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if len(m.ReleaseNotesUrl) > 0 {
		i -= len(m.ReleaseNotesUrl)
		copy(dAtA[i:], m.ReleaseNotesUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReleaseNotesUrl)))
		i--
		dAtA[i] = 0x7a
	}
	if m.MaxApplicableSoftwareVersion != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MaxApplicableSoftwareVersion))
		i--
		dAtA[i] = 0x70
	}
	if m.MinApplicableSoftwareVersion != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MinApplicableSoftwareVersion))
		i--
		dAtA[i] = 0x68
	}
	if m.OtaChecksumType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OtaChecksumType))
		i--
		dAtA[i] = 0x60
	}
	if len(m.OtaChecksum) > 0 {
		i -= len(m.OtaChecksum)
		copy(dAtA[i:], m.OtaChecksum)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OtaChecksum)))
		i--
		dAtA[i] = 0x5a
	}
	if m.OtaFileSize != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OtaFileSize))
		i--
		dAtA[i] = 0x50
	}
	if len(m.OtaUrl) > 0 {
		i -= len(m.OtaUrl)
		copy(dAtA[i:], m.OtaUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OtaUrl)))
		i--
		dAtA[i] = 0x4a
	}
	if m.SoftwareVersionValid {
		i--
		if m.SoftwareVersionValid {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.FirmwareInformation) > 0 {
		i -= len(m.FirmwareInformation)
		copy(dAtA[i:], m.FirmwareInformation)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FirmwareInformation)))
		i--
		dAtA[i] = 0x3a
	}
	if m.CdVersionNumber != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CdVersionNumber))
		i--
		dAtA[i] = 0x30
	}
	if len(m.SoftwareVersionString) > 0 {
		i -= len(m.SoftwareVersionString)
		copy(dAtA[i:], m.SoftwareVersionString)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SoftwareVersionString)))
		i--
		dAtA[i] = 0x2a
	}
	if m.SoftwareVersion != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SoftwareVersion))
		i--
		dAtA[i] = 0x20
	}
	if m.Pid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Pid))
		i--
		dAtA[i] = 0x18
	}
	if m.Vid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Vid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateModelVersionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateModelVersionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateModelVersionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateModelVersion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateModelVersion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateModelVersion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SchemaVersion != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SchemaVersion))
		i--
		dAtA[i] = 0x60
	}
	if len(m.OtaChecksum) > 0 {
		i -= len(m.OtaChecksum)
		copy(dAtA[i:], m.OtaChecksum)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OtaChecksum)))
		i--
		dAtA[i] = 0x5a
	}
	if m.OtaFileSize != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OtaFileSize))
		i--
		dAtA[i] = 0x50
	}
	if len(m.ReleaseNotesUrl) > 0 {
		i -= len(m.ReleaseNotesUrl)
		copy(dAtA[i:], m.ReleaseNotesUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReleaseNotesUrl)))
		i--
		dAtA[i] = 0x4a
	}
	if m.MaxApplicableSoftwareVersion != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MaxApplicableSoftwareVersion))
		i--
		dAtA[i] = 0x40
	}
	if m.MinApplicableSoftwareVersion != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MinApplicableSoftwareVersion))
		i--
		dAtA[i] = 0x38
	}
	if len(m.OtaUrl) > 0 {
		i -= len(m.OtaUrl)
		copy(dAtA[i:], m.OtaUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OtaUrl)))
		i--
		dAtA[i] = 0x32
	}
	if m.SoftwareVersionValid {
		i--
		if m.SoftwareVersionValid {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.SoftwareVersion != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SoftwareVersion))
		i--
		dAtA[i] = 0x20
	}
	if m.Pid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Pid))
		i--
		dAtA[i] = 0x18
	}
	if m.Vid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Vid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateModelVersionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateModelVersionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateModelVersionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteModelVersion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteModelVersion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteModelVersion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SoftwareVersion != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SoftwareVersion))
		i--
		dAtA[i] = 0x20
	}
	if m.Pid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Pid))
		i--
		dAtA[i] = 0x18
	}
	if m.Vid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Vid))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteModelVersionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteModelVersionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteModelVersionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateModel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Vid != 0 {
		n += 1 + sovTx(uint64(m.Vid))
	}
	if m.Pid != 0 {
		n += 1 + sovTx(uint64(m.Pid))
	}
	if m.DeviceTypeId != 0 {
		n += 1 + sovTx(uint64(m.DeviceTypeId))
	}
	l = len(m.ProductName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProductLabel)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PartNumber)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CommissioningCustomFlow != 0 {
		n += 1 + sovTx(uint64(m.CommissioningCustomFlow))
	}
	l = len(m.CommissioningCustomFlowUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CommissioningModeInitialStepsHint != 0 {
		n += 1 + sovTx(uint64(m.CommissioningModeInitialStepsHint))
	}
	l = len(m.CommissioningModeInitialStepsInstruction)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CommissioningModeSecondaryStepsHint != 0 {
		n += 1 + sovTx(uint64(m.CommissioningModeSecondaryStepsHint))
	}
	l = len(m.CommissioningModeSecondaryStepsInstruction)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UserManualUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SupportUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProductUrl)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.LsfUrl)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	if m.SchemaVersion != 0 {
		n += 2 + sovTx(uint64(m.SchemaVersion))
	}
	l = len(m.CommissionerRemoteUiFlowUrl)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateModelResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateModel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Vid != 0 {
		n += 1 + sovTx(uint64(m.Vid))
	}
	if m.Pid != 0 {
		n += 1 + sovTx(uint64(m.Pid))
	}
	l = len(m.ProductName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProductLabel)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PartNumber)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CommissioningCustomFlowUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CommissioningModeInitialStepsInstruction)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CommissioningModeSecondaryStepsInstruction)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UserManualUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SupportUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProductUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LsfUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LsfRevision != 0 {
		n += 1 + sovTx(uint64(m.LsfRevision))
	}
	if m.SchemaVersion != 0 {
		n += 1 + sovTx(uint64(m.SchemaVersion))
	}
	l = len(m.CommissionerRemoteUiFlowUrl)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateModelResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteModel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Vid != 0 {
		n += 1 + sovTx(uint64(m.Vid))
	}
	if m.Pid != 0 {
		n += 1 + sovTx(uint64(m.Pid))
	}
	return n
}

func (m *MsgDeleteModelResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateModelVersion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Vid != 0 {
		n += 1 + sovTx(uint64(m.Vid))
	}
	if m.Pid != 0 {
		n += 1 + sovTx(uint64(m.Pid))
	}
	if m.SoftwareVersion != 0 {
		n += 1 + sovTx(uint64(m.SoftwareVersion))
	}
	l = len(m.SoftwareVersionString)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CdVersionNumber != 0 {
		n += 1 + sovTx(uint64(m.CdVersionNumber))
	}
	l = len(m.FirmwareInformation)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SoftwareVersionValid {
		n += 2
	}
	l = len(m.OtaUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.OtaFileSize != 0 {
		n += 1 + sovTx(uint64(m.OtaFileSize))
	}
	l = len(m.OtaChecksum)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.OtaChecksumType != 0 {
		n += 1 + sovTx(uint64(m.OtaChecksumType))
	}
	if m.MinApplicableSoftwareVersion != 0 {
		n += 1 + sovTx(uint64(m.MinApplicableSoftwareVersion))
	}
	if m.MaxApplicableSoftwareVersion != 0 {
		n += 1 + sovTx(uint64(m.MaxApplicableSoftwareVersion))
	}
	l = len(m.ReleaseNotesUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SchemaVersion != 0 {
		n += 2 + sovTx(uint64(m.SchemaVersion))
	}
	return n
}

func (m *MsgCreateModelVersionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateModelVersion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Vid != 0 {
		n += 1 + sovTx(uint64(m.Vid))
	}
	if m.Pid != 0 {
		n += 1 + sovTx(uint64(m.Pid))
	}
	if m.SoftwareVersion != 0 {
		n += 1 + sovTx(uint64(m.SoftwareVersion))
	}
	if m.SoftwareVersionValid {
		n += 2
	}
	l = len(m.OtaUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MinApplicableSoftwareVersion != 0 {
		n += 1 + sovTx(uint64(m.MinApplicableSoftwareVersion))
	}
	if m.MaxApplicableSoftwareVersion != 0 {
		n += 1 + sovTx(uint64(m.MaxApplicableSoftwareVersion))
	}
	l = len(m.ReleaseNotesUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.OtaFileSize != 0 {
		n += 1 + sovTx(uint64(m.OtaFileSize))
	}
	l = len(m.OtaChecksum)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SchemaVersion != 0 {
		n += 1 + sovTx(uint64(m.SchemaVersion))
	}
	return n
}

func (m *MsgUpdateModelVersionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteModelVersion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Vid != 0 {
		n += 1 + sovTx(uint64(m.Vid))
	}
	if m.Pid != 0 {
		n += 1 + sovTx(uint64(m.Pid))
	}
	if m.SoftwareVersion != 0 {
		n += 1 + sovTx(uint64(m.SoftwareVersion))
	}
	return n
}

func (m *MsgDeleteModelVersionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateModel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateModel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateModel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vid", wireType)
			}
			m.Vid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			m.Pid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceTypeId", wireType)
			}
			m.DeviceTypeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DeviceTypeId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProductName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductLabel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProductLabel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PartNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PartNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommissioningCustomFlow", wireType)
			}
			m.CommissioningCustomFlow = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommissioningCustomFlow |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommissioningCustomFlowUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommissioningCustomFlowUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommissioningModeInitialStepsHint", wireType)
			}
			m.CommissioningModeInitialStepsHint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommissioningModeInitialStepsHint |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommissioningModeInitialStepsInstruction", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommissioningModeInitialStepsInstruction = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommissioningModeSecondaryStepsHint", wireType)
			}
			m.CommissioningModeSecondaryStepsHint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommissioningModeSecondaryStepsHint |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommissioningModeSecondaryStepsInstruction", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommissioningModeSecondaryStepsInstruction = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserManualUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserManualUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SupportUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SupportUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProductUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LsfUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LsfUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemaVersion", wireType)
			}
			m.SchemaVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SchemaVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommissionerRemoteUiFlowUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommissionerRemoteUiFlowUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateModelResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateModelResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateModelResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateModel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateModel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateModel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vid", wireType)
			}
			m.Vid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			m.Pid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProductName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductLabel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProductLabel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PartNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PartNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommissioningCustomFlowUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommissioningCustomFlowUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommissioningModeInitialStepsInstruction", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommissioningModeInitialStepsInstruction = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommissioningModeSecondaryStepsInstruction", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommissioningModeSecondaryStepsInstruction = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserManualUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserManualUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SupportUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SupportUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProductUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LsfUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LsfUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LsfRevision", wireType)
			}
			m.LsfRevision = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LsfRevision |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemaVersion", wireType)
			}
			m.SchemaVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SchemaVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommissionerRemoteUiFlowUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommissionerRemoteUiFlowUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateModelResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateModelResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateModelResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteModel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteModel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteModel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vid", wireType)
			}
			m.Vid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			m.Pid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteModelResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteModelResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteModelResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateModelVersion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateModelVersion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateModelVersion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vid", wireType)
			}
			m.Vid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			m.Pid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoftwareVersion", wireType)
			}
			m.SoftwareVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SoftwareVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoftwareVersionString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SoftwareVersionString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CdVersionNumber", wireType)
			}
			m.CdVersionNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CdVersionNumber |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirmwareInformation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirmwareInformation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoftwareVersionValid", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SoftwareVersionValid = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtaUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OtaUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtaFileSize", wireType)
			}
			m.OtaFileSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OtaFileSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtaChecksum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OtaChecksum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtaChecksumType", wireType)
			}
			m.OtaChecksumType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OtaChecksumType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinApplicableSoftwareVersion", wireType)
			}
			m.MinApplicableSoftwareVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinApplicableSoftwareVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxApplicableSoftwareVersion", wireType)
			}
			m.MaxApplicableSoftwareVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxApplicableSoftwareVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReleaseNotesUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReleaseNotesUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemaVersion", wireType)
			}
			m.SchemaVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SchemaVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateModelVersionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateModelVersionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateModelVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateModelVersion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateModelVersion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateModelVersion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vid", wireType)
			}
			m.Vid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			m.Pid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoftwareVersion", wireType)
			}
			m.SoftwareVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SoftwareVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoftwareVersionValid", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SoftwareVersionValid = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtaUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OtaUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinApplicableSoftwareVersion", wireType)
			}
			m.MinApplicableSoftwareVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinApplicableSoftwareVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxApplicableSoftwareVersion", wireType)
			}
			m.MaxApplicableSoftwareVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxApplicableSoftwareVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReleaseNotesUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReleaseNotesUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtaFileSize", wireType)
			}
			m.OtaFileSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OtaFileSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtaChecksum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OtaChecksum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemaVersion", wireType)
			}
			m.SchemaVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SchemaVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateModelVersionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateModelVersionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateModelVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteModelVersion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteModelVersion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteModelVersion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vid", wireType)
			}
			m.Vid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			m.Pid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoftwareVersion", wireType)
			}
			m.SoftwareVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SoftwareVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteModelVersionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteModelVersionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteModelVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
