// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: model/types/query.proto

package types

import (
	context "context"
	fmt "fmt"
	query "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QueryGetVendorProductsRequest struct {
	Vid int32 `protobuf:"varint,1,opt,name=vid,proto3" json:"vid,omitempty"`
}

func (m *QueryGetVendorProductsRequest) Reset()         { *m = QueryGetVendorProductsRequest{} }
func (m *QueryGetVendorProductsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetVendorProductsRequest) ProtoMessage()    {}
func (*QueryGetVendorProductsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9acda84995c2b09, []int{0}
}
func (m *QueryGetVendorProductsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetVendorProductsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetVendorProductsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetVendorProductsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetVendorProductsRequest.Merge(m, src)
}
func (m *QueryGetVendorProductsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetVendorProductsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetVendorProductsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetVendorProductsRequest proto.InternalMessageInfo

func (m *QueryGetVendorProductsRequest) GetVid() int32 {
	if m != nil {
		return m.Vid
	}
	return 0
}

type QueryGetVendorProductsResponse struct {
	VendorProducts VendorProducts `protobuf:"bytes,1,opt,name=vendorProducts,proto3" json:"vendorProducts"`
}

func (m *QueryGetVendorProductsResponse) Reset()         { *m = QueryGetVendorProductsResponse{} }
func (m *QueryGetVendorProductsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetVendorProductsResponse) ProtoMessage()    {}
func (*QueryGetVendorProductsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9acda84995c2b09, []int{1}
}
func (m *QueryGetVendorProductsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetVendorProductsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetVendorProductsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetVendorProductsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetVendorProductsResponse.Merge(m, src)
}
func (m *QueryGetVendorProductsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetVendorProductsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetVendorProductsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetVendorProductsResponse proto.InternalMessageInfo

func (m *QueryGetVendorProductsResponse) GetVendorProducts() VendorProducts {
	if m != nil {
		return m.VendorProducts
	}
	return VendorProducts{}
}

type QueryGetModelRequest struct {
	Vid int32 `protobuf:"varint,1,opt,name=vid,proto3" json:"vid,omitempty"`
	Pid int32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (m *QueryGetModelRequest) Reset()         { *m = QueryGetModelRequest{} }
func (m *QueryGetModelRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetModelRequest) ProtoMessage()    {}
func (*QueryGetModelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9acda84995c2b09, []int{2}
}
func (m *QueryGetModelRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetModelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetModelRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetModelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetModelRequest.Merge(m, src)
}
func (m *QueryGetModelRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetModelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetModelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetModelRequest proto.InternalMessageInfo

func (m *QueryGetModelRequest) GetVid() int32 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *QueryGetModelRequest) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type QueryGetModelResponse struct {
	Model Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model"`
}

func (m *QueryGetModelResponse) Reset()         { *m = QueryGetModelResponse{} }
func (m *QueryGetModelResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetModelResponse) ProtoMessage()    {}
func (*QueryGetModelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9acda84995c2b09, []int{3}
}
func (m *QueryGetModelResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetModelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetModelResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetModelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetModelResponse.Merge(m, src)
}
func (m *QueryGetModelResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetModelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetModelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetModelResponse proto.InternalMessageInfo

func (m *QueryGetModelResponse) GetModel() Model {
	if m != nil {
		return m.Model
	}
	return Model{}
}

type QueryAllModelRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllModelRequest) Reset()         { *m = QueryAllModelRequest{} }
func (m *QueryAllModelRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAllModelRequest) ProtoMessage()    {}
func (*QueryAllModelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9acda84995c2b09, []int{4}
}
func (m *QueryAllModelRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllModelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllModelRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllModelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllModelRequest.Merge(m, src)
}
func (m *QueryAllModelRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllModelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllModelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllModelRequest proto.InternalMessageInfo

func (m *QueryAllModelRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryAllModelResponse struct {
	Model      []Model             `protobuf:"bytes,1,rep,name=model,proto3" json:"model"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (m *QueryAllModelResponse) Reset()         { *m = QueryAllModelResponse{} }
func (m *QueryAllModelResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAllModelResponse) ProtoMessage()    {}
func (*QueryAllModelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9acda84995c2b09, []int{5}
}
func (m *QueryAllModelResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryAllModelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllModelResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryAllModelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllModelResponse.Merge(m, src)
}
func (m *QueryAllModelResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryAllModelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllModelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllModelResponse proto.InternalMessageInfo

func (m *QueryAllModelResponse) GetModel() []Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *QueryAllModelResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type QueryGetModelVersionRequest struct {
	Vid             int32  `protobuf:"varint,1,opt,name=vid,proto3" json:"vid,omitempty"`
	Pid             int32  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	SoftwareVersion uint32 `protobuf:"varint,3,opt,name=softwareVersion,proto3" json:"softwareVersion,omitempty"`
}

func (m *QueryGetModelVersionRequest) Reset()         { *m = QueryGetModelVersionRequest{} }
func (m *QueryGetModelVersionRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetModelVersionRequest) ProtoMessage()    {}
func (*QueryGetModelVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9acda84995c2b09, []int{6}
}
func (m *QueryGetModelVersionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetModelVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetModelVersionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetModelVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetModelVersionRequest.Merge(m, src)
}
func (m *QueryGetModelVersionRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetModelVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetModelVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetModelVersionRequest proto.InternalMessageInfo

func (m *QueryGetModelVersionRequest) GetVid() int32 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *QueryGetModelVersionRequest) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *QueryGetModelVersionRequest) GetSoftwareVersion() uint32 {
	if m != nil {
		return m.SoftwareVersion
	}
	return 0
}

type QueryGetModelVersionResponse struct {
	ModelVersion ModelVersion `protobuf:"bytes,1,opt,name=modelVersion,proto3" json:"modelVersion"`
}

func (m *QueryGetModelVersionResponse) Reset()         { *m = QueryGetModelVersionResponse{} }
func (m *QueryGetModelVersionResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetModelVersionResponse) ProtoMessage()    {}
func (*QueryGetModelVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9acda84995c2b09, []int{7}
}
func (m *QueryGetModelVersionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetModelVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetModelVersionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetModelVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetModelVersionResponse.Merge(m, src)
}
func (m *QueryGetModelVersionResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetModelVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetModelVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetModelVersionResponse proto.InternalMessageInfo

func (m *QueryGetModelVersionResponse) GetModelVersion() ModelVersion {
	if m != nil {
		return m.ModelVersion
	}
	return ModelVersion{}
}

type QueryGetModelVersionsRequest struct {
	Vid int32 `protobuf:"varint,1,opt,name=vid,proto3" json:"vid,omitempty"`
	Pid int32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (m *QueryGetModelVersionsRequest) Reset()         { *m = QueryGetModelVersionsRequest{} }
func (m *QueryGetModelVersionsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryGetModelVersionsRequest) ProtoMessage()    {}
func (*QueryGetModelVersionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9acda84995c2b09, []int{8}
}
func (m *QueryGetModelVersionsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetModelVersionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetModelVersionsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetModelVersionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetModelVersionsRequest.Merge(m, src)
}
func (m *QueryGetModelVersionsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetModelVersionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetModelVersionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetModelVersionsRequest proto.InternalMessageInfo

func (m *QueryGetModelVersionsRequest) GetVid() int32 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *QueryGetModelVersionsRequest) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type QueryGetModelVersionsResponse struct {
	ModelVersions ModelVersions `protobuf:"bytes,1,opt,name=modelVersions,proto3" json:"modelVersions"`
}

func (m *QueryGetModelVersionsResponse) Reset()         { *m = QueryGetModelVersionsResponse{} }
func (m *QueryGetModelVersionsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryGetModelVersionsResponse) ProtoMessage()    {}
func (*QueryGetModelVersionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9acda84995c2b09, []int{9}
}
func (m *QueryGetModelVersionsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryGetModelVersionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetModelVersionsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryGetModelVersionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetModelVersionsResponse.Merge(m, src)
}
func (m *QueryGetModelVersionsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryGetModelVersionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetModelVersionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryGetModelVersionsResponse proto.InternalMessageInfo

func (m *QueryGetModelVersionsResponse) GetModelVersions() ModelVersions {
	if m != nil {
		return m.ModelVersions
	}
	return ModelVersions{}
}

func init() {
	proto.RegisterType((*QueryGetVendorProductsRequest)(nil), "model.types.QueryGetVendorProductsRequest")
	proto.RegisterType((*QueryGetVendorProductsResponse)(nil), "model.types.QueryGetVendorProductsResponse")
	proto.RegisterType((*QueryGetModelRequest)(nil), "model.types.QueryGetModelRequest")
	proto.RegisterType((*QueryGetModelResponse)(nil), "model.types.QueryGetModelResponse")
	proto.RegisterType((*QueryAllModelRequest)(nil), "model.types.QueryAllModelRequest")
	proto.RegisterType((*QueryAllModelResponse)(nil), "model.types.QueryAllModelResponse")
	proto.RegisterType((*QueryGetModelVersionRequest)(nil), "model.types.QueryGetModelVersionRequest")
	proto.RegisterType((*QueryGetModelVersionResponse)(nil), "model.types.QueryGetModelVersionResponse")
	proto.RegisterType((*QueryGetModelVersionsRequest)(nil), "model.types.QueryGetModelVersionsRequest")
	proto.RegisterType((*QueryGetModelVersionsResponse)(nil), "model.types.QueryGetModelVersionsResponse")
}

func init() { proto.RegisterFile("model/types/query.proto", fileDescriptor_c9acda84995c2b09) }

var fileDescriptor_c9acda84995c2b09 = []byte{
	// 696 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x95, 0x4f, 0x4f, 0xd4, 0x4e,
	0x18, 0xc7, 0xb7, 0xf0, 0xdb, 0x5f, 0xcc, 0xf0, 0x47, 0x1d, 0x31, 0xc0, 0x02, 0x5d, 0x68, 0xa2,
	0xac, 0x18, 0x3a, 0x59, 0x38, 0xe9, 0x0d, 0x4c, 0x20, 0x1e, 0x4c, 0x70, 0x0f, 0x1c, 0x3c, 0x88,
	0xdd, 0x76, 0xac, 0x13, 0xba, 0x9d, 0xd2, 0x99, 0xad, 0x22, 0xe1, 0xe2, 0xd1, 0x8b, 0x24, 0xde,
	0x7d, 0x05, 0xbe, 0x10, 0x8e, 0x24, 0x5e, 0x3c, 0x19, 0x03, 0xbe, 0x10, 0xd3, 0x99, 0xa9, 0xdb,
	0xe9, 0x6e, 0xd9, 0xe5, 0xb2, 0x99, 0x3c, 0xf3, 0x7c, 0x9f, 0xef, 0x67, 0x9f, 0x3e, 0x4f, 0x0b,
	0x66, 0x3b, 0xd4, 0xc3, 0x01, 0xe2, 0xc7, 0x11, 0x66, 0xe8, 0xa8, 0x8b, 0xe3, 0x63, 0x3b, 0x8a,
	0x29, 0xa7, 0x70, 0x42, 0x5c, 0xd8, 0xe2, 0xa2, 0xb6, 0xe8, 0x53, 0xea, 0x07, 0x18, 0x39, 0x11,
	0x41, 0x4e, 0x18, 0x52, 0xee, 0x70, 0x42, 0x43, 0x26, 0x53, 0x6b, 0x6b, 0x2e, 0x65, 0x1d, 0xca,
	0x50, 0xdb, 0x61, 0x58, 0xd6, 0x40, 0x49, 0xb3, 0x8d, 0xb9, 0xd3, 0x44, 0x91, 0xe3, 0x93, 0x50,
	0x24, 0xab, 0xdc, 0x95, 0xbc, 0x5f, 0x82, 0x43, 0x8f, 0xc6, 0x07, 0x51, 0x4c, 0xbd, 0xae, 0xcb,
	0xb3, 0x72, 0x1a, 0x92, 0xa4, 0x90, 0x17, 0xf5, 0xbe, 0x8b, 0x83, 0x04, 0xc7, 0xac, 0x57, 0x7c,
	0xb9, 0x34, 0x21, 0xab, 0x3d, 0xe3, 0x53, 0x9f, 0x8a, 0x23, 0x4a, 0x4f, 0x32, 0x6a, 0x35, 0xc1,
	0xd2, 0xcb, 0x14, 0x7b, 0x17, 0xf3, 0x7d, 0x81, 0xb4, 0xa7, 0x88, 0x5a, 0xf8, 0xa8, 0x8b, 0x19,
	0x87, 0x77, 0xc0, 0x78, 0x42, 0xbc, 0x39, 0x63, 0xd9, 0x68, 0x54, 0x5b, 0xe9, 0xd1, 0x3a, 0x04,
	0x66, 0x99, 0x84, 0x45, 0x34, 0x64, 0x18, 0x3e, 0x07, 0xd3, 0x89, 0x76, 0x23, 0xe4, 0x13, 0x1b,
	0x0b, 0x76, 0xae, 0xb3, 0xb6, 0x2e, 0xde, 0xfe, 0xef, 0xfc, 0x57, 0xbd, 0xd2, 0x2a, 0x08, 0xad,
	0xa7, 0x60, 0x26, 0x33, 0x7b, 0x91, 0x6a, 0x4b, 0xb1, 0xd2, 0x48, 0x44, 0xbc, 0xb9, 0x31, 0x19,
	0x89, 0x88, 0x67, 0xed, 0x82, 0xfb, 0x05, 0xad, 0xe2, 0xb3, 0x41, 0x55, 0x80, 0x28, 0x2c, 0xa8,
	0x61, 0x89, 0x54, 0x45, 0x23, 0xd3, 0xac, 0xd7, 0x0a, 0x62, 0x2b, 0x08, 0x34, 0x88, 0x1d, 0x00,
	0x7a, 0x4f, 0x59, 0x15, 0x7b, 0x68, 0xcb, 0x91, 0xb0, 0xd3, 0x91, 0xb0, 0xe5, 0x58, 0xa9, 0x91,
	0xb0, 0xf7, 0x1c, 0x1f, 0x2b, 0x6d, 0x2b, 0xa7, 0xb4, 0xce, 0x0c, 0x45, 0xda, 0x33, 0xe8, 0x27,
	0x1d, 0x1f, 0x81, 0x14, 0xee, 0x6a, 0x44, 0x63, 0x82, 0x68, 0x75, 0x28, 0x91, 0x34, 0xd3, 0x90,
	0x0e, 0xc1, 0x82, 0xd6, 0xbb, 0x7d, 0x39, 0x4c, 0x37, 0x68, 0x3f, 0x6c, 0x80, 0xdb, 0x8c, 0xbe,
	0xe5, 0xef, 0x9d, 0x18, 0x2b, 0xf5, 0xdc, 0xf8, 0xb2, 0xd1, 0x98, 0x6a, 0x15, 0xc3, 0x96, 0x0b,
	0x16, 0x07, 0x9b, 0xa9, 0x2e, 0x3c, 0x03, 0x93, 0x9d, 0x5c, 0x5c, 0x75, 0x7a, 0xbe, 0xbf, 0x19,
	0x2a, 0x41, 0xf5, 0x44, 0x13, 0x59, 0xdb, 0x83, 0x4d, 0xd8, 0x4d, 0x26, 0xca, 0xef, 0x6d, 0x4b,
	0xa1, 0x86, 0x22, 0xdd, 0x01, 0x53, 0x79, 0xd3, 0x6c, 0xf0, 0x6b, 0xa5, 0xa8, 0xd9, 0xdc, 0xeb,
	0xb2, 0x8d, 0xef, 0x55, 0x50, 0x15, 0x4e, 0xf0, 0xb3, 0x01, 0xa6, 0xf5, 0x4d, 0x81, 0x6b, 0x5a,
	0xb5, 0x6b, 0xd7, 0xb7, 0xf6, 0x78, 0xa4, 0x5c, 0x49, 0x6f, 0xd5, 0x3f, 0xfd, 0xf8, 0xf3, 0x75,
	0x6c, 0x1e, 0xce, 0x22, 0xcf, 0x0d, 0xe4, 0x5b, 0x44, 0xfe, 0x32, 0x74, 0x92, 0x10, 0xef, 0x14,
	0x76, 0x41, 0x55, 0xc0, 0xc3, 0x95, 0x81, 0x65, 0xf3, 0xcb, 0x51, 0xb3, 0xae, 0x4b, 0x51, 0x86,
	0x0f, 0x84, 0x61, 0x1d, 0x2e, 0x95, 0x18, 0xa2, 0x93, 0x28, 0xb5, 0x0d, 0xc0, 0x2d, 0xa1, 0xdb,
	0x0a, 0x06, 0x3a, 0x17, 0xd6, 0x72, 0x90, 0x73, 0x71, 0xb1, 0xac, 0x79, 0xe1, 0x7c, 0x0f, 0xde,
	0xed, 0x73, 0x86, 0xdf, 0x0c, 0x30, 0x99, 0x7f, 0x44, 0xb0, 0x51, 0xfe, 0x4f, 0xf4, 0xb5, 0xa8,
	0x3d, 0x1a, 0x21, 0x53, 0x01, 0x3c, 0x11, 0x00, 0x9b, 0xb0, 0x99, 0x03, 0xc8, 0xde, 0xd8, 0xf9,
	0x3f, 0x8f, 0x4e, 0x0a, 0xdb, 0x72, 0x0a, 0xbf, 0x18, 0x60, 0x4a, 0x9b, 0x21, 0x38, 0xdc, 0xf7,
	0xdf, 0x40, 0xac, 0x8d, 0x92, 0xaa, 0x18, 0x57, 0x05, 0xe3, 0x0a, 0xac, 0x0f, 0x61, 0xdc, 0x7e,
	0x73, 0x7e, 0x69, 0x1a, 0x17, 0x97, 0xa6, 0xf1, 0xfb, 0xd2, 0x34, 0xce, 0xae, 0xcc, 0xca, 0xc5,
	0x95, 0x59, 0xf9, 0x79, 0x65, 0x56, 0x5e, 0xed, 0xf8, 0x84, 0xbf, 0xeb, 0xb6, 0x6d, 0x97, 0x76,
	0xd0, 0x47, 0xe2, 0xb7, 0x31, 0x5e, 0x77, 0x82, 0x80, 0x38, 0xa1, 0x8b, 0x91, 0x47, 0x18, 0x8f,
	0x49, 0xbb, 0xcb, 0xb1, 0xb7, 0xee, 0xd2, 0x4e, 0x24, 0xc3, 0xeb, 0x01, 0xf6, 0x7c, 0x1c, 0xa3,
	0x0f, 0x28, 0xf7, 0x49, 0x6b, 0xff, 0x2f, 0x3e, 0x57, 0x9b, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x5d, 0xd7, 0x4f, 0x46, 0xb5, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Queries VendorProducts by index.
	VendorProducts(ctx context.Context, in *QueryGetVendorProductsRequest, opts ...grpc.CallOption) (*QueryGetVendorProductsResponse, error)
	// Queries a Model by index.
	Model(ctx context.Context, in *QueryGetModelRequest, opts ...grpc.CallOption) (*QueryGetModelResponse, error)
	// Queries a list of all Model items.
	ModelAll(ctx context.Context, in *QueryAllModelRequest, opts ...grpc.CallOption) (*QueryAllModelResponse, error)
	// Queries a ModelVersion by index.
	ModelVersion(ctx context.Context, in *QueryGetModelVersionRequest, opts ...grpc.CallOption) (*QueryGetModelVersionResponse, error)
	// Queries ModelVersions by index.
	ModelVersions(ctx context.Context, in *QueryGetModelVersionsRequest, opts ...grpc.CallOption) (*QueryGetModelVersionsResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) VendorProducts(ctx context.Context, in *QueryGetVendorProductsRequest, opts ...grpc.CallOption) (*QueryGetVendorProductsResponse, error) {
	out := new(QueryGetVendorProductsResponse)
	err := c.cc.Invoke(ctx, "/model.types.Query/VendorProducts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Model(ctx context.Context, in *QueryGetModelRequest, opts ...grpc.CallOption) (*QueryGetModelResponse, error) {
	out := new(QueryGetModelResponse)
	err := c.cc.Invoke(ctx, "/model.types.Query/Model", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ModelAll(ctx context.Context, in *QueryAllModelRequest, opts ...grpc.CallOption) (*QueryAllModelResponse, error) {
	out := new(QueryAllModelResponse)
	err := c.cc.Invoke(ctx, "/model.types.Query/ModelAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ModelVersion(ctx context.Context, in *QueryGetModelVersionRequest, opts ...grpc.CallOption) (*QueryGetModelVersionResponse, error) {
	out := new(QueryGetModelVersionResponse)
	err := c.cc.Invoke(ctx, "/model.types.Query/ModelVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ModelVersions(ctx context.Context, in *QueryGetModelVersionsRequest, opts ...grpc.CallOption) (*QueryGetModelVersionsResponse, error) {
	out := new(QueryGetModelVersionsResponse)
	err := c.cc.Invoke(ctx, "/model.types.Query/ModelVersions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Queries VendorProducts by index.
	VendorProducts(context.Context, *QueryGetVendorProductsRequest) (*QueryGetVendorProductsResponse, error)
	// Queries a Model by index.
	Model(context.Context, *QueryGetModelRequest) (*QueryGetModelResponse, error)
	// Queries a list of all Model items.
	ModelAll(context.Context, *QueryAllModelRequest) (*QueryAllModelResponse, error)
	// Queries a ModelVersion by index.
	ModelVersion(context.Context, *QueryGetModelVersionRequest) (*QueryGetModelVersionResponse, error)
	// Queries ModelVersions by index.
	ModelVersions(context.Context, *QueryGetModelVersionsRequest) (*QueryGetModelVersionsResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) VendorProducts(ctx context.Context, req *QueryGetVendorProductsRequest) (*QueryGetVendorProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VendorProducts not implemented")
}
func (*UnimplementedQueryServer) Model(ctx context.Context, req *QueryGetModelRequest) (*QueryGetModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Model not implemented")
}
func (*UnimplementedQueryServer) ModelAll(ctx context.Context, req *QueryAllModelRequest) (*QueryAllModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModelAll not implemented")
}
func (*UnimplementedQueryServer) ModelVersion(ctx context.Context, req *QueryGetModelVersionRequest) (*QueryGetModelVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModelVersion not implemented")
}
func (*UnimplementedQueryServer) ModelVersions(ctx context.Context, req *QueryGetModelVersionsRequest) (*QueryGetModelVersionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModelVersions not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_VendorProducts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetVendorProductsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).VendorProducts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.types.Query/VendorProducts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).VendorProducts(ctx, req.(*QueryGetVendorProductsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Model_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Model(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.types.Query/Model",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Model(ctx, req.(*QueryGetModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ModelAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).ModelAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.types.Query/ModelAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).ModelAll(ctx, req.(*QueryAllModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ModelVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetModelVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).ModelVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.types.Query/ModelVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).ModelVersion(ctx, req.(*QueryGetModelVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ModelVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetModelVersionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).ModelVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.types.Query/ModelVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).ModelVersions(ctx, req.(*QueryGetModelVersionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.types.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VendorProducts",
			Handler:    _Query_VendorProducts_Handler,
		},
		{
			MethodName: "Model",
			Handler:    _Query_Model_Handler,
		},
		{
			MethodName: "ModelAll",
			Handler:    _Query_ModelAll_Handler,
		},
		{
			MethodName: "ModelVersion",
			Handler:    _Query_ModelVersion_Handler,
		},
		{
			MethodName: "ModelVersions",
			Handler:    _Query_ModelVersions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "model/types/query.proto",
}

func (m *QueryGetVendorProductsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetVendorProductsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetVendorProductsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Vid != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Vid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetVendorProductsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetVendorProductsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetVendorProductsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.VendorProducts.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryGetModelRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetModelRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetModelRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pid != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Pid))
		i--
		dAtA[i] = 0x10
	}
	if m.Vid != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Vid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetModelResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetModelResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetModelResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Model.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryAllModelRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllModelRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllModelRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryAllModelResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryAllModelResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryAllModelResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Model) > 0 {
		for iNdEx := len(m.Model) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Model[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetModelVersionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetModelVersionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetModelVersionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SoftwareVersion != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.SoftwareVersion))
		i--
		dAtA[i] = 0x18
	}
	if m.Pid != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Pid))
		i--
		dAtA[i] = 0x10
	}
	if m.Vid != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Vid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetModelVersionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetModelVersionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetModelVersionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.ModelVersion.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *QueryGetModelVersionsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetModelVersionsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetModelVersionsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pid != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Pid))
		i--
		dAtA[i] = 0x10
	}
	if m.Vid != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.Vid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QueryGetModelVersionsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryGetModelVersionsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryGetModelVersionsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.ModelVersions.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryGetVendorProductsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Vid != 0 {
		n += 1 + sovQuery(uint64(m.Vid))
	}
	return n
}

func (m *QueryGetVendorProductsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.VendorProducts.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryGetModelRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Vid != 0 {
		n += 1 + sovQuery(uint64(m.Vid))
	}
	if m.Pid != 0 {
		n += 1 + sovQuery(uint64(m.Pid))
	}
	return n
}

func (m *QueryGetModelResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Model.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryAllModelRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryAllModelResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Model) > 0 {
		for _, e := range m.Model {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

func (m *QueryGetModelVersionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Vid != 0 {
		n += 1 + sovQuery(uint64(m.Vid))
	}
	if m.Pid != 0 {
		n += 1 + sovQuery(uint64(m.Pid))
	}
	if m.SoftwareVersion != 0 {
		n += 1 + sovQuery(uint64(m.SoftwareVersion))
	}
	return n
}

func (m *QueryGetModelVersionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ModelVersion.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func (m *QueryGetModelVersionsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Vid != 0 {
		n += 1 + sovQuery(uint64(m.Vid))
	}
	if m.Pid != 0 {
		n += 1 + sovQuery(uint64(m.Pid))
	}
	return n
}

func (m *QueryGetModelVersionsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ModelVersions.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryGetVendorProductsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetVendorProductsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetVendorProductsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vid", wireType)
			}
			m.Vid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetVendorProductsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetVendorProductsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetVendorProductsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VendorProducts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.VendorProducts.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetModelRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetModelRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetModelRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vid", wireType)
			}
			m.Vid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			m.Pid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetModelResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetModelResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetModelResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Model", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Model.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllModelRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllModelRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllModelRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryAllModelResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllModelResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllModelResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Model", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Model = append(m.Model, Model{})
			if err := m.Model[len(m.Model)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetModelVersionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetModelVersionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetModelVersionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vid", wireType)
			}
			m.Vid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			m.Pid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoftwareVersion", wireType)
			}
			m.SoftwareVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SoftwareVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetModelVersionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetModelVersionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetModelVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModelVersion", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ModelVersion.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetModelVersionsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetModelVersionsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetModelVersionsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vid", wireType)
			}
			m.Vid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			m.Pid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryGetModelVersionsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetModelVersionsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetModelVersionsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModelVersions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ModelVersions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
