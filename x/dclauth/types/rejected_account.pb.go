// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: zigbeealliance/distributedcomplianceledger/dclauth/rejected_account.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RejectedAccount struct {
	*Account                     `protobuf:"bytes,1,opt,name=account,proto3,embedded=account" json:"account,omitempty"`
	RejectedAccountSchemaVersion uint32 `protobuf:"varint,2,opt,name=rejectedAccountSchemaVersion,proto3" json:"rejectedAccountSchemaVersion,omitempty"`
}

func (m *RejectedAccount) Reset()         { *m = RejectedAccount{} }
func (m *RejectedAccount) String() string { return proto.CompactTextString(m) }
func (*RejectedAccount) ProtoMessage()    {}
func (*RejectedAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_013608431c2fa3ea, []int{0}
}
func (m *RejectedAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RejectedAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RejectedAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RejectedAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RejectedAccount.Merge(m, src)
}
func (m *RejectedAccount) XXX_Size() int {
	return m.Size()
}
func (m *RejectedAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_RejectedAccount.DiscardUnknown(m)
}

var xxx_messageInfo_RejectedAccount proto.InternalMessageInfo

func (m *RejectedAccount) GetRejectedAccountSchemaVersion() uint32 {
	if m != nil {
		return m.RejectedAccountSchemaVersion
	}
	return 0
}

func init() {
	proto.RegisterType((*RejectedAccount)(nil), "zigbeealliance.distributedcomplianceledger.dclauth.RejectedAccount")
}

func init() {
	proto.RegisterFile("zigbeealliance/distributedcomplianceledger/dclauth/rejected_account.proto", fileDescriptor_013608431c2fa3ea)
}

var fileDescriptor_013608431c2fa3ea = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xf2, 0xac, 0xca, 0x4c, 0x4f,
	0x4a, 0x4d, 0x4d, 0xcc, 0xc9, 0xc9, 0x4c, 0xcc, 0x4b, 0x4e, 0xd5, 0x4f, 0xc9, 0x2c, 0x2e, 0x29,
	0xca, 0x4c, 0x2a, 0x2d, 0x49, 0x4d, 0x49, 0xce, 0xcf, 0x2d, 0x80, 0x88, 0xe6, 0xa4, 0xa6, 0xa4,
	0xa7, 0x16, 0xe9, 0xa7, 0x24, 0xe7, 0x24, 0x96, 0x96, 0x64, 0xe8, 0x17, 0xa5, 0x66, 0xa5, 0x26,
	0x97, 0xa4, 0xa6, 0xc4, 0x27, 0x26, 0x27, 0xe7, 0x97, 0xe6, 0x95, 0xe8, 0x15, 0x14, 0xe5, 0x97,
	0xe4, 0x0b, 0x19, 0xa1, 0x1a, 0xa5, 0x87, 0xc7, 0x28, 0x3d, 0xa8, 0x51, 0x52, 0x22, 0xe9, 0xf9,
	0xe9, 0xf9, 0x60, 0xed, 0xfa, 0x20, 0x16, 0xc4, 0x24, 0x29, 0x07, 0x32, 0x1c, 0x85, 0xe2, 0x16,
	0xa5, 0x4d, 0x8c, 0x5c, 0xfc, 0x41, 0x50, 0x67, 0x3a, 0x42, 0x64, 0x84, 0xa2, 0xb9, 0xd8, 0xa1,
	0x8a, 0x24, 0x18, 0x15, 0x18, 0x35, 0xb8, 0x8d, 0xac, 0xf5, 0x48, 0x77, 0xb1, 0x1e, 0xd4, 0x34,
	0x27, 0x96, 0x0b, 0xf7, 0xe4, 0x19, 0x83, 0x60, 0x26, 0x0a, 0x39, 0x71, 0xc9, 0x14, 0xa1, 0xda,
	0x17, 0x9c, 0x9c, 0x91, 0x9a, 0x9b, 0x18, 0x96, 0x5a, 0x54, 0x9c, 0x99, 0x9f, 0x27, 0xc1, 0xa4,
	0xc0, 0xa8, 0xc1, 0x1b, 0x84, 0x57, 0x8d, 0x53, 0xd2, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9,
	0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe1, 0xb1, 0x1c, 0xc3, 0x85, 0xc7, 0x72, 0x0c, 0x37, 0x1e,
	0xcb, 0x31, 0x44, 0x79, 0xa4, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0x43,
	0xdc, 0xac, 0x8b, 0x2d, 0x70, 0x74, 0x11, 0xae, 0xd6, 0x85, 0x06, 0x4f, 0x05, 0x3c, 0x80, 0x4a,
	0x2a, 0x0b, 0x52, 0x8b, 0x93, 0xd8, 0xc0, 0xe1, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x48,
	0x46, 0x57, 0xe6, 0xf8, 0x01, 0x00, 0x00,
}

func (m *RejectedAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RejectedAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RejectedAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RejectedAccountSchemaVersion != 0 {
		i = encodeVarintRejectedAccount(dAtA, i, uint64(m.RejectedAccountSchemaVersion))
		i--
		dAtA[i] = 0x10
	}
	if m.Account != nil {
		{
			size, err := m.Account.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRejectedAccount(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRejectedAccount(dAtA []byte, offset int, v uint64) int {
	offset -= sovRejectedAccount(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *RejectedAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Account != nil {
		l = m.Account.Size()
		n += 1 + l + sovRejectedAccount(uint64(l))
	}
	if m.RejectedAccountSchemaVersion != 0 {
		n += 1 + sovRejectedAccount(uint64(m.RejectedAccountSchemaVersion))
	}
	return n
}

func sovRejectedAccount(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRejectedAccount(x uint64) (n int) {
	return sovRejectedAccount(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RejectedAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRejectedAccount
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RejectedAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RejectedAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRejectedAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRejectedAccount
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRejectedAccount
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Account == nil {
				m.Account = &Account{}
			}
			if err := m.Account.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RejectedAccountSchemaVersion", wireType)
			}
			m.RejectedAccountSchemaVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRejectedAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RejectedAccountSchemaVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRejectedAccount(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRejectedAccount
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRejectedAccount(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRejectedAccount
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRejectedAccount
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRejectedAccount
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRejectedAccount
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRejectedAccount
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRejectedAccount
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRejectedAccount        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRejectedAccount          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRejectedAccount = fmt.Errorf("proto: unexpected end of group")
)
