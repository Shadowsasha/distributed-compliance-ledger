// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: zigbeealliance/distributedcomplianceledger/compliance/revoked_model.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RevokedModel struct {
	Vid               int32  `protobuf:"varint,1,opt,name=vid,proto3" json:"vid,omitempty"`
	Pid               int32  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	SoftwareVersion   uint32 `protobuf:"varint,3,opt,name=softwareVersion,proto3" json:"softwareVersion,omitempty"`
	CertificationType string `protobuf:"bytes,4,opt,name=certificationType,proto3" json:"certificationType,omitempty"`
	Value             bool   `protobuf:"varint,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *RevokedModel) Reset()         { *m = RevokedModel{} }
func (m *RevokedModel) String() string { return proto.CompactTextString(m) }
func (*RevokedModel) ProtoMessage()    {}
func (*RevokedModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ce0c072c0981ccd, []int{0}
}
func (m *RevokedModel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RevokedModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RevokedModel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RevokedModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokedModel.Merge(m, src)
}
func (m *RevokedModel) XXX_Size() int {
	return m.Size()
}
func (m *RevokedModel) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokedModel.DiscardUnknown(m)
}

var xxx_messageInfo_RevokedModel proto.InternalMessageInfo

func (m *RevokedModel) GetVid() int32 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *RevokedModel) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *RevokedModel) GetSoftwareVersion() uint32 {
	if m != nil {
		return m.SoftwareVersion
	}
	return 0
}

func (m *RevokedModel) GetCertificationType() string {
	if m != nil {
		return m.CertificationType
	}
	return ""
}

func (m *RevokedModel) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

func init() {
	proto.RegisterType((*RevokedModel)(nil), "zigbeealliance.distributedcomplianceledger.compliance.RevokedModel")
}

func init() {
	proto.RegisterFile("zigbeealliance/distributedcomplianceledger/compliance/revoked_model.proto", fileDescriptor_8ce0c072c0981ccd)
}

var fileDescriptor_8ce0c072c0981ccd = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xbf, 0x4a, 0xc5, 0x30,
	0x14, 0x87, 0x1b, 0xaf, 0x15, 0x0d, 0x8a, 0x5a, 0x1c, 0x3a, 0x85, 0xe2, 0xd4, 0xc1, 0xb6, 0x83,
	0xf8, 0x02, 0x6e, 0x22, 0x2e, 0x45, 0x1c, 0x5c, 0x24, 0x6d, 0xce, 0xad, 0x07, 0x73, 0x9b, 0x90,
	0xa6, 0xd5, 0xeb, 0x53, 0xf8, 0x08, 0x3e, 0x8e, 0xe3, 0x1d, 0x1d, 0xa5, 0x7d, 0x11, 0xa9, 0x11,
	0xea, 0x3f, 0xdc, 0x92, 0xef, 0xc0, 0x07, 0xbf, 0x8f, 0x9e, 0x3d, 0x62, 0x55, 0x00, 0x70, 0x29,
	0x91, 0xd7, 0x25, 0x64, 0x02, 0x1b, 0x6b, 0xb0, 0x68, 0x2d, 0x88, 0x52, 0x2d, 0xb4, 0xa3, 0x12,
	0x44, 0x05, 0x26, 0x9b, 0x40, 0x66, 0xa0, 0x53, 0x77, 0x20, 0x6e, 0x16, 0x4a, 0x80, 0x4c, 0xb5,
	0x51, 0x56, 0x05, 0x27, 0xdf, 0x55, 0xe9, 0x3f, 0xaa, 0x74, 0x02, 0x87, 0xcf, 0x84, 0x6e, 0xe7,
	0x4e, 0x77, 0x31, 0xda, 0x82, 0x3d, 0x3a, 0xeb, 0x50, 0x84, 0x24, 0x22, 0xb1, 0x9f, 0x8f, 0xcf,
	0x91, 0x68, 0x14, 0xe1, 0x9a, 0x23, 0x1a, 0x45, 0x10, 0xd3, 0xdd, 0x46, 0xcd, 0xed, 0x3d, 0x37,
	0x70, 0x05, 0xa6, 0x41, 0x55, 0x87, 0xb3, 0x88, 0xc4, 0x3b, 0xf9, 0x4f, 0x1c, 0x1c, 0xd1, 0xfd,
	0x12, 0x8c, 0xc5, 0x39, 0x96, 0xdc, 0xa2, 0xaa, 0x2f, 0x97, 0x1a, 0xc2, 0xf5, 0x88, 0xc4, 0x5b,
	0xf9, 0xef, 0x43, 0x70, 0x40, 0xfd, 0x8e, 0xcb, 0x16, 0x42, 0x3f, 0x22, 0xf1, 0x66, 0xee, 0x3e,
	0xa7, 0xf0, 0xd2, 0x33, 0xb2, 0xea, 0x19, 0x79, 0xeb, 0x19, 0x79, 0x1a, 0x98, 0xb7, 0x1a, 0x98,
	0xf7, 0x3a, 0x30, 0xef, 0xfa, 0xbc, 0x42, 0x7b, 0xdb, 0x16, 0xe3, 0x9e, 0xcc, 0xcd, 0x4f, 0xfe,
	0x4a, 0x99, 0x4c, 0x7b, 0x93, 0xcf, 0x98, 0x0f, 0x5f, 0x73, 0xda, 0xa5, 0x86, 0xa6, 0xd8, 0xf8,
	0xe8, 0x78, 0xfc, 0x1e, 0x00, 0x00, 0xff, 0xff, 0x06, 0xe1, 0x80, 0xfc, 0x94, 0x01, 0x00, 0x00,
}

func (m *RevokedModel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RevokedModel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RevokedModel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Value {
		i--
		if m.Value {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.CertificationType) > 0 {
		i -= len(m.CertificationType)
		copy(dAtA[i:], m.CertificationType)
		i = encodeVarintRevokedModel(dAtA, i, uint64(len(m.CertificationType)))
		i--
		dAtA[i] = 0x22
	}
	if m.SoftwareVersion != 0 {
		i = encodeVarintRevokedModel(dAtA, i, uint64(m.SoftwareVersion))
		i--
		dAtA[i] = 0x18
	}
	if m.Pid != 0 {
		i = encodeVarintRevokedModel(dAtA, i, uint64(m.Pid))
		i--
		dAtA[i] = 0x10
	}
	if m.Vid != 0 {
		i = encodeVarintRevokedModel(dAtA, i, uint64(m.Vid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintRevokedModel(dAtA []byte, offset int, v uint64) int {
	offset -= sovRevokedModel(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *RevokedModel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Vid != 0 {
		n += 1 + sovRevokedModel(uint64(m.Vid))
	}
	if m.Pid != 0 {
		n += 1 + sovRevokedModel(uint64(m.Pid))
	}
	if m.SoftwareVersion != 0 {
		n += 1 + sovRevokedModel(uint64(m.SoftwareVersion))
	}
	l = len(m.CertificationType)
	if l > 0 {
		n += 1 + l + sovRevokedModel(uint64(l))
	}
	if m.Value {
		n += 2
	}
	return n
}

func sovRevokedModel(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRevokedModel(x uint64) (n int) {
	return sovRevokedModel(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RevokedModel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRevokedModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RevokedModel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RevokedModel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vid", wireType)
			}
			m.Vid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRevokedModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Vid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			m.Pid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRevokedModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SoftwareVersion", wireType)
			}
			m.SoftwareVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRevokedModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SoftwareVersion |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CertificationType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRevokedModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRevokedModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRevokedModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CertificationType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRevokedModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipRevokedModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRevokedModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRevokedModel(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRevokedModel
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRevokedModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRevokedModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRevokedModel
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRevokedModel
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRevokedModel
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRevokedModel        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRevokedModel          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRevokedModel = fmt.Errorf("proto: unexpected end of group")
)
