syntax = "proto3";
package vendorinfo.types;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "vendorinfo/types/vendor_info.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/zigbee-alliance/distributed-compliance-ledger/x/vendorinfo/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a vendorInfo by index.
	rpc VendorInfo(QueryGetVendorInfoRequest) returns (QueryGetVendorInfoResponse) {
		option (google.api.http).get = "/dcl/vendorinfo/vendors/{vendorID}";
	}

	// Queries a list of vendorInfo items.
	rpc VendorInfoAll(QueryAllVendorInfoRequest) returns (QueryAllVendorInfoResponse) {
		option (google.api.http).get = "/dcl/vendorinfo/vendors";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetVendorInfoRequest {
	int32 vendorID = 1;

}

message QueryGetVendorInfoResponse {
	VendorInfo vendorInfo = 1 [(gogoproto.nullable) = false];
}

message QueryAllVendorInfoRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllVendorInfoResponse {
	repeated VendorInfo vendorInfo = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
